[
  {
    "objectID": "process.html",
    "href": "process.html",
    "title": "Project Process",
    "section": "",
    "text": "The process to creating this model involves the following steps:\nStep 1: Gathering the data, downloading the information from OpenDataPhilly/DVRPC and using an API to gather 311 data.\nStep 2: Cleaning that data and joining it to the street network for analysis.\nStep 3: Creating the predictive model and testing its predictive power with the 2023 Street Paving Program and List.\nStep 4: Predict the streets being repaved in 2024 and mapping these streets."
  },
  {
    "objectID": "FinalProject/Step4v3.html",
    "href": "FinalProject/Step4v3.html",
    "title": "Step 4: Predict Paving",
    "section": "",
    "text": "Import Packages\n\n\nCode\nfrom matplotlib import pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport hvplot.pandas\nimport requests\nimport seaborn as sns\nimport contextily as ctx\n\n# Models\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Model selection\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n\n# Pipelines\nfrom sklearn.pipeline import make_pipeline\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\nnp.random.seed(42)\n\npd.options.display.max_columns = 999\n%matplotlib inline\npd.options.mode.chained_assignment = None\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoad in Data, Preprocess\n\n\nCode\nstreet = gpd.read_file(\"Data/street_merge.geojson\")\nstreet.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash_2022\ncrash_2023\nTruck\n2022_Paved\n2023_Paved\n311_2022\n311_2023\nnearest_lts_score\ngeometry\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0\n0.0\n0.0\n1.0\n0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n\n\n\n\n\n\n\n\n\nCode\ncols_2022 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2022\",\n    \"Truck\",\n    \"2022_Paved\",\n    \"2023_Paved\",\n    \"311_2022\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2022 = street[cols_2022]\n\nnew_column_names = {'crash_2022': 'crash', '2022_Paved': 'paved_1','2023_Paved':'paved_2','311_2022':'311'} #Renaming so the model will work for other datasets\nstreet_2022.rename(columns=new_column_names, inplace=True)\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2022_features = street_2022.drop(columns=cols_to_drop).copy()\n\nstreet_2022_features = street_2022_features.dropna(subset=['paved_1'])\n\n\n\n\nCreate Random Forest Model\n\n\nCode\nnumerical_features = ['crash', '311']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','paved_1']\ntarget_variable = 'paved_2'\n\n# Creating feature and target dataframes\nX = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Creating a preprocessor for categorical features\ntransformer = ColumnTransformer(\n    transformers=[\n        (\"num\", StandardScaler(), numerical_features),\n        (\"cat\", \n         make_pipeline(SimpleImputer(strategy='constant', fill_value=0),  # Fill missing values with 0\n                       OneHotEncoder(handle_unknown=\"ignore\")),  # Apply OneHotEncoder\n         categorical_features)\n    ]\n)\n\n# Make a random forest pipeline\npipe = make_pipeline(\n    transformer, RandomForestClassifier(n_estimators=20, random_state=42)\n)\n\n# Fit on the training data\npipe.fit(X_train, y_train);\npipe.score(X_test, y_test)\n\ny_pred = pipe.predict(X_test)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nprint(f'Accuracy (Random Forest): {accuracy}')\n\n# Confusion Matrix\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# Classification Report\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred))\n\n\nAccuracy (Random Forest): 0.9411145310221934\nConfusion Matrix:\n[[11612     6]\n [  721     7]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       0.54      0.01      0.02       728\n\n    accuracy                           0.94     12346\n   macro avg       0.74      0.50      0.49     12346\nweighted avg       0.92      0.94      0.91     12346\n\n\n\n\n\nPredict 2023 Paving\nUse the random forest model to predict the streets repaved in 2023 so we can visualize the model’s accuracy. Add a column for whether the prediction was correct, 1 = correct prediction, 0 = incorrect prediction.\n\n\nCode\nX_new = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\ny_pred = pipe.predict(X_new)\n\nstreet_2022['2023_Paved_Predicted'] = y_pred\nstreet_2022['predict_correct'] = (street_2022['paved_2'] == street_2022['2023_Paved_Predicted']).astype(int)\nstreet_2022.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash\nTruck\npaved_1\npaved_2\n311\nnearest_lts_score\ngeometry\n2023_Paved_Predicted\npredict_correct\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0.0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0.0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0.0\n0.0\n1.0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0.0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n1\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0.0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n1\n\n\n\n\n\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['red', 'grey'])\nstreet_2022.explore(\n    column=\"predict_correct\",\n    cmap=custom_cmap_1,\n    categorical=True,\n    legend=True,\n    tiles=\"CartoDB positron\"\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\nPredict 2024 Paving\n\n\nCode\ncols_2023 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2023\",\n    \"Truck\",\n    \"2023_Paved\",\n    \"311_2023\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2023 = street[cols_2023]\n\nnew_column_names = {'crash_2023': 'crash', '2023_Paved': 'paved_1','311_2023':'311'} #Renaming so the variables are the same as the 2022 data that trained the model\nstreet_2023.rename(columns=new_column_names, inplace=True)\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2023_features = street_2023.drop(columns=cols_to_drop).copy()\n\nstreet_2023_features = street_2023_features.dropna(subset=['paved_1'])\n\nnumerical_features = ['crash', '311']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','paved_1']\nX_new = street_2023_features[numerical_features + categorical_features]\ny_pred = pipe.predict(X_new)\n\nstreet_2023['2024_Paved_Predicted'] = y_pred\nstreet_2023.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash\nTruck\npaved_1\n311\nnearest_lts_score\ngeometry\n2024_Paved_Predicted\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0.0\n1.0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n\n\n\n\n\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['grey', 'red'])\nstreet_2023.explore(\n    column=\"2024_Paved_Predicted\",\n    cmap=custom_cmap_1,\n    categorical=True,\n    legend=True,\n    tiles=\"CartoDB positron\"\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "FinalProject/Step4.html",
    "href": "FinalProject/Step4.html",
    "title": "Step 4: Predict Paving",
    "section": "",
    "text": "Import Packages\n\n\nCode\nfrom matplotlib import pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport hvplot.pandas\nimport requests\nimport seaborn as sns\nimport contextily as ctx\n\n# Models\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Model selection\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n\n# Pipelines\nfrom sklearn.pipeline import make_pipeline\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\nnp.random.seed(42)\n\npd.options.display.max_columns = 999\n%matplotlib inline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoad in Data, Preprocess\n\n\nCode\nstreet = gpd.read_file(\"Data/street_merge.geojson\")\nstreet.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash_2022\ncrash_2023\nTruck\n2022_Paved\n2023_Paved\n311_2022\n311_2023\nnearest_lts_score\ngeometry\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0\n0.0\n0.0\n1.0\n0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n\n\n\n\n\n\n\n\n\nCode\ncols_2022 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2022\",\n    \"Truck\",\n    \"2022_Paved\",\n    \"2023_Paved\",\n    \"311_2022\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2022 = street[cols_2022]\n\nnew_column_names = {'crash_2022': 'crash', '2022_Paved': 'paved_1','2023_Paved':'paved_2','311_2022':'311'} #Renaming so the model will work for other datasets\nstreet_2022.rename(columns=new_column_names, inplace=True)\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2022_features = street_2022.drop(columns=cols_to_drop).copy()\n\nstreet_2022_features = street_2022_features.dropna(subset=['paved_1'])\nlen(street_2022_features)\n\n\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_6260\\1098369766.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  street_2022.rename(columns=new_column_names, inplace=True)\n\n\n41151\n\n\n\n\nCreate Random Forest Model\n\n\nCode\nnumerical_features = ['crash', '311']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','paved_1']\ntarget_variable = 'paved_2'\n\n# Creating feature and target dataframes\nX = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Creating a preprocessor for categorical features\ntransformer = ColumnTransformer(\n    transformers=[\n        (\"num\", StandardScaler(), numerical_features),\n        (\"cat\", \n         make_pipeline(SimpleImputer(strategy='constant', fill_value=0),  # Fill missing values with 0\n                       OneHotEncoder(handle_unknown=\"ignore\")),  # Apply OneHotEncoder\n         categorical_features)\n    ]\n)\n\n# Make a random forest pipeline\npipe = make_pipeline(\n    transformer, RandomForestClassifier(n_estimators=20, random_state=42)\n)\n\n# Fit on the training data\npipe.fit(X_train, y_train);\npipe.score(X_test, y_test)\n\ny_pred = pipe.predict(X_test)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nprint(f'Accuracy (Random Forest): {accuracy}')\n\n# Confusion Matrix\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# Classification Report\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred))\n\n\nAccuracy (Random Forest): 0.9411145310221934\nConfusion Matrix:\n[[11612     6]\n [  721     7]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       0.54      0.01      0.02       728\n\n    accuracy                           0.94     12346\n   macro avg       0.74      0.50      0.49     12346\nweighted avg       0.92      0.94      0.91     12346\n\n\n\n\n\nPredict 2023 Paving\nUse the random forest model to predict the streets repaved in 2023. Add a column for whether the prediction was correct, 1 = correct prediction, 0 = incorrect prediction.\n\n\nCode\nX_new = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\ny_pred = pipe.predict(X_new)\n\nstreet_2022['2023_Paved_Predicted'] = y_pred\nstreet_2022['predict_correct'] = (street_2022['paved_2'] == street_2022['2023_Paved_Predicted']).astype(int)\nstreet_2022.head()\n\n\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\geopandas\\geodataframe.py:1538: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash\nTruck\npaved_1\npaved_2\n311\nnearest_lts_score\ngeometry\n2023_Paved_Predicted\npredict_correct\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0.0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0.0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0.0\n0.0\n1.0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0.0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n1\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0.0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n1\n\n\n\n\n\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['red', '#a9a9a9'])\nstreet_2022.explore(\n    column=\"predict_correct\",\n    cmap=custom_cmap_1,\n    categorical=True,\n    legend=True,\n    tiles=\"CartoDB positron\"\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\nPredict 2024 Paving\n\n\nCode\ncols_2023 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2023\",\n    \"Truck\",\n    \"2023_Paved\",\n    \"311_2023\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2023 = street[cols_2023]\n\nnew_column_names = {'crash_2023': 'crash', '2023_Paved': 'paved_1','311_2023':'311'} #Renaming so the variables are the same as the 2022 data that trained the model\nstreet_2023.rename(columns=new_column_names, inplace=True)\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2023_features = street_2023.drop(columns=cols_to_drop).copy()\n\nstreet_2023_features = street_2023_features.dropna(subset=['paved_1'])\n\n\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_6260\\168569400.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  street_2023.rename(columns=new_column_names, inplace=True)\n\n\n\n\n\n\n\n\n\nCLASS\ncrash\nTruck\npaved_1\n311\nnearest_lts_score\n\n\n\n\n0\n2\n0\n0.0\n1.0\n0\n3\n\n\n1\n2\n0\n0.0\n1.0\n0\n3\n\n\n2\n2\n0\n0.0\n1.0\n0\n4\n\n\n3\n5\n0\n0.0\n0.0\n0\n1\n\n\n4\n5\n0\n0.0\n0.0\n0\n1\n\n\n\n\n\n\n\n\n\nCode\nnumerical_features = ['crash', '311']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','paved_1']\nX_new = street_2023_features[numerical_features + categorical_features]\ny_pred = pipe.predict(X_new)\n\nstreet_2023['2024_Paved_Predicted'] = y_pred\nstreet_2023.head()\n\n\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\geopandas\\geodataframe.py:1538: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash\nTruck\npaved_1\n311\nnearest_lts_score\ngeometry\n2024_Paved_Predicted\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0.0\n1.0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n\n\n\n\n\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['#a9a9a9', '#66ff00'])\nstreet_2023.explore(\n    column=\"2024_Paved_Predicted\",\n    cmap=custom_cmap_1,\n    categorical=True,\n    legend=True,\n    tiles=\"CartoDB positron\"\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "FinalProject/Step2.html",
    "href": "FinalProject/Step2.html",
    "title": "Step 2: Clean & Merge Project Data",
    "section": "",
    "text": "Import Packages\n\n\nCode\nimport geopandas as gpd\nimport numpy as np\nimport pandas as pd\nimport requests\nfrom datetime import datetime\nfrom shapely.geometry import Point\nfrom shapely.ops import nearest_points\n\n\n\n\nStreet Data\nRead in street centerline data\n\n\nCode\nstreet = gpd.read_file(\"Data/Street_Centerline.geojson\")\n\n\nClean up street centerline data to keep only relevant information\n\n\nCode\ncols_to_keep = [\"R_HUNDRED\", \"CLASS\", \"STNAME\",\"ST_CODE\",\"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet = street[cols_to_keep]\nstreet.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n\n\n\n\n\n\n\n\n\nCode\nstreet.to_file(\"Data/street_clean.geojson\", driver='GeoJSON')\n\n\n\n\nPaving Data\n\n2022\nRead in .csv made from PDF of 2022 paving program. Keep only relevant information and rename columns to match the street centerline data. Create a new column for whether the street was paved in 2022.\n1 = The street was paved in 2022. 0 = The street was not paved in 2022.\n\n\nCode\npav_2022 = pd.read_csv(\"Data/2022_Paving.csv\")\n\ncols_to_drop = [\"Unnamed: 12\", \"Unnamed: 11\", \"Unnamed: 10\", \n                \"PAVING PROGRAM\", \"ROADWAY RESURFACING RATING\", \n                \"EMERGENCY UTILITY WORK\", \"DITCHES\", \"POTHOLES\", \n                \"CITY COUNCIL DISTRICT\"]\n\npav_2022 = pav_2022.drop(columns=cols_to_drop)\n\npav_2022['2022_Paved']=1\n\npav_2022.rename(columns={'HUNDRED': 'R_HUNDRED'}, inplace=True)\npav_2022.rename(columns={'STREET': 'STNAME'}, inplace=True)\n\npav_2022.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nSTNAME\nFROM\nTO\n2022_Paved\n\n\n\n\n0\n200\n38TH PARALLEL PL\nDOCK ST\nSPRUCE ST\n1\n\n\n1\n5300\nALFRED ST\nW PENN ST\nW COULTER ST\n1\n\n\n2\n5400\nARCHER ST\nEARLHAM TER\nW COULTER ST\n1\n\n\n3\n2400\nBAINBRIDGE ST\nS 24TH ST\nBRINLEY CT\n1\n\n\n4\n2500\nBAINBRIDGE ST\nBRINLEY CT\nS BAMBREY ST\n1\n\n\n\n\n\n\n\nMerge paving data with the street centerline by the street name and number.\n\n\nCode\nstreet_merge_2022_pav = pd.merge(street, pav_2022, how='left', on=['STNAME', 'R_HUNDRED'])\n\ncols_to_drop = ['FROM', 'TO']\nstreet_merge_2022_pav = street_merge_2022_pav.drop(columns = cols_to_drop)\n\nstreet_merge_2022_pav=street_merge_2022_pav.drop_duplicates(subset=['R_HUNDRED', 'STNAME', 'SEG_ID'])\nstreet_merge_2022_pav['2022_Paved'].fillna(0, inplace=True)\n\nstreet_merge_2022_pav.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n2022_Paved\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n\n\n\n\n\n\n\n\n\n2023\nRead in .csv made from PDF of 2023 paving program. Keep only relevant information and rename columns to match the street centerline data. Create a new column for whether the street was paved in 2023.\n1 = The street was paved in 2023. 0 = The street was not paved in 2023.\n\n\nCode\npav_2023 = pd.read_csv(\"Data/2023_Paving.csv\")\n\ncols_to_keep = [\"HUNDRED\", \"ON\"]\npav_2023 = pav_2023[cols_to_keep]\n\npav_2023['2023_Paved']=1\n\npav_2023.rename(columns={'HUNDRED': 'R_HUNDRED'}, inplace=True)\npav_2023.rename(columns={'ON': 'STNAME'}, inplace=True)\n\npav_2023.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nSTNAME\n2023_Paved\n\n\n\n\n0\n2100\n73RD AVE\n1\n\n\n1\n2000\n73RD AVE\n1\n\n\n2\n1900\n73RD AVE\n1\n\n\n3\n1900\n73RD AVE\n1\n\n\n4\n1800\n73RD AVE\n1\n\n\n\n\n\n\n\nMerge paving data with the street centerline by the street name and number.\n\n\nCode\npav_2023['R_HUNDRED'] = pd.to_numeric(pav_2023['R_HUNDRED'], errors='coerce')\n\nstreet_merge_2023_pav = pd.merge(street, pav_2023, how='left', on=['STNAME', 'R_HUNDRED'])\n\nstreet_merge_2023_pav=street_merge_2023_pav.drop_duplicates(subset=['R_HUNDRED', 'STNAME', 'SEG_ID'])\nstreet_merge_2023_pav['2023_Paved'].fillna(0, inplace=True)\n\nstreet_merge_2023_pav.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n2023_Paved\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n1.0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n1.0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n1.0\n\n\n5\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n\n\n6\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n\n\n\n\n\n\n\n\n\nCombine Paving\n\n\nCode\nstreet_merge_pav = pd.merge(street_merge_2022_pav, \n                            street_merge_2023_pav, \n                            how = 'left', \n                            on =['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID','Shape__Length','geometry'])\nstreet_merge_pav.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n2022_Paved\n2023_Paved\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n1.0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n1.0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n1.0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n0.0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n0.0\n\n\n\n\n\n\n\n\n\nCode\nstreet_merge_pav.to_file(\"Data/street_merge_pav.geojson\", driver='GeoJSON')\n\n\n\n\n\nNo Thru Trucks\nLoad in the “No Thru Truck” data/ Create a column for whether or not the street is a thru street for trucks. 1 = Not a thru street for trucks, 0 = A thru street for trucks.\n\n\nCode\ntruck = gpd.read_file(\"Data/No_thru_Trucks.geojson\")\n\ntruck['Truck']=1\ntruck = truck[['SEG_ID', 'ST_CODE', 'STNAME','geometry', 'Truck']]\n\ntruck.head()\n\n\n\n\n\n\n\n\n\nSEG_ID\nST_CODE\nSTNAME\ngeometry\nTruck\n\n\n\n\n0\n422113\n65260\nPOPLAR ST\nLINESTRING (-75.18540 39.97343, -75.18699 39.9...\n1\n\n\n1\n421057\n65260\nPOPLAR ST\nLINESTRING (-75.18485 39.97336, -75.18540 39.9...\n1\n\n\n2\n421059\n65260\nPOPLAR ST\nLINESTRING (-75.18215 39.97302, -75.18377 39.9...\n1\n\n\n3\n421058\n65260\nPOPLAR ST\nLINESTRING (-75.18377 39.97323, -75.18485 39.9...\n1\n\n\n4\n422216\n16880\nBENJAMIN FRANKLIN PKWY\nLINESTRING (-75.17509 39.96119, -75.17680 39.9...\n1\n\n\n\n\n\n\n\nMerge truck data with street data.\n\n\nCode\nstreet_merge_truck = pd.merge(street, truck, how='left', on=['STNAME', 'ST_CODE', 'SEG_ID', 'geometry'])\nstreet_merge_truck=street_merge_truck.drop_duplicates(subset=['STNAME', 'ST_CODE', 'SEG_ID','geometry'])\nstreet_merge_truck['Truck'].fillna(0, inplace=True)\n\nstreet_merge_truck.sort_values(by='Truck', ascending=False, inplace=True)\nstreet_merge_truck.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\nTruck\n\n\n\n\n30622\n200\n5\nW ASHDALE ST\n13540\n741177\n207.279874\nLINESTRING (-75.12765 40.02743, -75.12949 40.0...\n1.0\n\n\n8511\n0\n4\nCHRISTIAN ST\n23060\n342581\n61.551433\nLINESTRING (-75.14384 39.93519, -75.14436 39.9...\n1.0\n\n\n8463\n600\n5\nS AMERICAN ST\n12460\n342528\n61.160192\nLINESTRING (-75.14684 39.94086, -75.14693 39.9...\n1.0\n\n\n17998\n3000\n5\nN PHILIP ST\n64500\n540250\n99.921614\nLINESTRING (-75.13445 39.99606, -75.13442 39.9...\n1.0\n\n\n17995\n3200\n4\nJASPER ST\n45980\n540246\n61.954342\nLINESTRING (-75.11153 39.99554, -75.11107 39.9...\n1.0\n\n\n\n\n\n\n\n\n\nCode\nstreet_merge_truck.to_file(\"Data/street_merge_truck.geojson\", driver='GeoJSON')\n\n\n\n\n311 Calls\n\n2022\nLoad in 311 data. Clean data, filter it so it’s only “Street Defect”\n\n\nCode\ncall311_2022 = pd.read_csv(\"Data/2022_311.csv\")\ncall311_2022.dropna(subset=['lat'], inplace=True)\ncall311_2022=call311_2022[call311_2022['service_name'] == \"Street Defect\"]\ncall311_2022.head()\n\n\n\n\n\n\n\n\n\nobjectid\nservice_request_id\nsubject\nstatus\nstatus_notes\nservice_name\nservice_code\nagency_responsible\nservice_notice\nrequested_datetime\nupdated_datetime\nexpected_datetime\nclosed_datetime\naddress\nzipcode\nmedia_url\nlat\nlon\n\n\n\n\n8\n23205540\n14882965\nPothole Repair\nClosed\nNaN\nStreet Defect\nSR-ST01\nStreets Department\n46 Business Days\n2022-04-22 15:45:16\n2022-07-20 00:16:58\n2022-07-04 20:00:00\n2022-07-19 23:51:32\n246 FERNON ST\n19148\nNaN\n39.927853\n-75.150313\n\n\n10\n23171928\n14841323\nStreet Defect\nClosed\nNaN\nStreet Defect\nSR-ST01\nStreets Department\n46 Business Days\n2022-04-04 16:11:58\n2023-02-15 22:13:40\n2022-06-14 20:00:00\n2022-07-06 03:12:05\n2935 CECIL B MOORE AVE\n19121\nNaN\n39.981959\n-75.183079\n\n\n17\n23171934\n14841514\nPothole Repair\nClosed\nNaN\nStreet Defect\nSR-ST01\nStreets Department\n46 Business Days\n2022-04-04 17:08:46\n2023-02-15 22:13:40\n2022-06-14 20:00:00\n2022-09-17 03:45:20\n1122 WALNUT ST\n19107\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\n39.948809\n-75.160094\n\n\n22\n23171938\n14841518\nPothole Repair\nClosed\nNaN\nStreet Defect\nSR-ST01\nStreets Department\n46 Business Days\n2022-04-04 17:09:48\n2023-02-15 22:13:56\n2022-06-14 20:00:00\n2022-05-11 12:21:17\n932 S SAINT BERNARD ST\n19143\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\n39.944998\n-75.218785\n\n\n56\n23205542\n14882968\nPothole Repair\nClosed\nNaN\nStreet Defect\nSR-ST01\nStreets Department\n3 Business Days\n2022-04-22 15:45:50\n2022-04-30 13:03:39\n2022-04-27 20:00:00\n2022-04-30 13:03:23\n9501 GERMANTOWN AVE\n19118\nNaN\n40.084391\n-75.224705\n\n\n\n\n\n\n\nConvert the .csv to a geodataframe\n\n\nCode\ncall311_2022_geo= [Point(xy) for xy in zip(call311_2022['lon'], call311_2022['lat'])]\ncall311_2022_gdf= gpd.GeoDataFrame(call311_2022, geometry=call311_2022_geo)\ncall311_2022_gdf.set_crs(epsg=4326, inplace=True)\nprint(call311_2022_gdf.crs)\n\n\nCreate a function that counts the number of points within a buffer of each road segment\n\n\nCode\n# Define a function to count points near each segment\ndef count_points_near_segment(segment_geometry, points, buffer_distance=.00002): #buffer of approximately 10m\n    # Buffer the segment geometry to create a buffer around it\n    buffered_segment = segment_geometry.buffer(buffer_distance)\n\n    # Check if each point is within the buffered segment\n    points_near_segment = points[points.geometry.within(buffered_segment)]\n\n    # Return the count of points near the segment\n    return len(points_near_segment)\n\n\nCreate new file with a column for the count of points for each segment\n\n\nCode\nstreet_merge_311_2022 = street.copy()\n# Create a new column in the geojson GeoDataFrame to store the point counts\nstreet_merge_311_2022['311_2022'] = street['geometry'].apply(\n    lambda x: count_points_near_segment(x, call311_2022_gdf['geometry'])\n)\nstreet_merge_311_2022.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n311_2022\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0\n\n\n\n\n\n\n\n\n\n2023\nLoad in 311 data and remove any rows without location.\n\n\nCode\ncall311_2023 = pd.read_csv(\"Data/2023_311.csv\")\ncall311_2023.dropna(subset=['lat'], inplace=True)\n\n\nConvert the .csv to a geodataframe\n\n\nCode\ncall311_2023_geo= [Point(xy) for xy in zip(call311_2023['lon'], call311_2023['lat'])]\ncall311_2023_gdf= gpd.GeoDataFrame(call311_2023, geometry=call311_2023_geo)\ncall311_2023_gdf.set_crs(epsg=4326, inplace=True)\nprint(call311_2023_gdf.crs)\n\n\nEPSG:4326\n\n\nCreate new file with a column for the count of points for each segment\n\n\nCode\nstreet_merge_311_2023 = street.copy()\n# Create a new column in the geojson GeoDataFrame to store the point counts\nstreet_merge_311_2023['311_2023'] = street['geometry'].apply(\n    lambda x: count_points_near_segment(x, call311_2023_gdf['geometry'])\n)\nstreet_merge_311_2023 = street_merge_311_2023.sort_values(by='311_2023', ascending=False)\nstreet_merge_311_2023.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n311_2023\n\n\n\n\n34690\n8000\n2\nCRESHEIM VALLEY DR\n25820\n820540\n880.442668\nLINESTRING (-75.19639 40.06663, -75.19626 40.0...\n23\n\n\n20632\n200\n3\nCECIL B MOORE AVE\n22010\n542988\n64.073073\nLINESTRING (-75.14010 39.97643, -75.14067 39.9...\n20\n\n\n38699\n8400\n3\nKREWSTOWN RD\n48180\n960601\n1116.928647\nLINESTRING (-75.05586 40.07326, -75.05595 40.0...\n19\n\n\n6559\n700\n4\nFITZWATER ST\n34280\n340399\n176.111382\nLINESTRING (-75.15434 39.94031, -75.15589 39.9...\n18\n\n\n14012\n600\n4\nN 10TH ST\n87990\n440803\n55.911127\nLINESTRING (-75.15418 39.96323, -75.15410 39.9...\n16\n\n\n\n\n\n\n\n\n\nCombine 311 Data\n\n\nCode\nstreet_merge_311 = pd.merge(street_merge_311_2022, \n                            street_merge_311_2023, \n                            how = 'left', \n                            on =['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID','Shape__Length','geometry'])\nstreet_merge_311.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\n311_2022\n311_2023\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0\n0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0\n0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0\n0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0\n0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0\n0\n\n\n\n\n\n\n\n\n\nCode\nstreet_merge_311.to_file(\"Data/street_merge_311.geojson\", driver='GeoJSON')\n\n\n\n\n\nCrashes\nLoad in crash data:\n\n\nCode\ncrash = gpd.read_file(\"Data/fatal_crashes.geojson\")\ncrash.head()\n\n\n\n\n\n\n\n\n\nobjectid\nyear\ndistrict\ndc_number\ndate_\nprimary_st\nsecondary_\nage\nsex\ncrash_type\nhit_____ru\nveh1\nveh2\narrest_yes\ninvestigat\ndc_key\npoint_x\npoint_y\ntime_of_day__24hrs_\ngeometry\n\n\n\n\n0\n342178\n2023\n35\n067936\n2023-10-23 04:00:00+00:00\n1300 Windrim Ave.\nNaN\n32.0\nM\nUnit #1 was eastbound on the 1300 block of Win...\nNo\nAuto\nFixed Object\nNo\nThe deceased was the cause of the crash.\n202335067936\n-75.144326\n40.030786\nNaN\nPOINT (-75.14433 40.03079)\n\n\n1\n342179\n2023\n24\n074067\n2023-10-27 04:00:00+00:00\nLehigh Ave.\nJasper St.\n45.0\nF\nUnit #2 was stopped in traffic eastbound on Le...\nNo\nAuto\nAuto\nNo\nThe deceased was the cause of the crash.\n202324074067\n-75.124325\n39.988805\nNaN\nPOINT (-75.12432 39.98880)\n\n\n2\n342180\n2023\n24\n074067\n2023-10-27 04:00:00+00:00\nLehigh Ave.\nJasper St.\n57.0\nM\nUnit #2 was stopped in traffic eastbound on Le...\nNo\nAuto\nAuto\nNo\nThe person who caused the crash also died in t...\n202324074067\n-75.124325\n39.988805\nNaN\nPOINT (-75.12432 39.98880)\n\n\n3\n342181\n2023\n24\n075220\n2023-11-01 04:00:00+00:00\nLehigh Ave.\nEmerald St.\n33.0\nM\nUnit #2 was standing in the west crosswalk in ...\nYes\nAuto\nPedestrian\nNo\nActive investigation\n202324075220\n-75.123831\n39.988780\nNaN\nPOINT (-75.12383 39.98878)\n\n\n4\n342182\n2023\n14\n056753\n2023-10-25 04:00:00+00:00\n6329 Stenton Ave.\nNaN\n62.0\nM\nUnit #1 was northbound on Stenton when it stru...\nNo\nAuto\nPedestrian\nNo\nActive investigation\n202314056753\n-75.165143\n40.058944\nNaN\nPOINT (-75.16514 40.05894)\n\n\n\n\n\n\n\n\n2022\nPull out the 2022 crash data.\n\n\nCode\ncrash['date_'] = crash['date_'].astype(str)\ncrash_2022 = crash[crash['date_'].str.contains('2022')]\n\n\n\n\n\n\n\n\n\nobjectid\nyear\ndistrict\ndc_number\ndate_\nprimary_st\nsecondary_\nage\nsex\ncrash_type\nhit_____ru\nveh1\nveh2\narrest_yes\ninvestigat\ndc_key\npoint_x\npoint_y\ntime_of_day__24hrs_\ngeometry\n\n\n\n\n425\n341983\n2022\n24\n026326\n2022-05-10 04:00:00+00:00\nAllegheny Ave.\nKensington Ave.\n32.0\nM\nUnit #1 E/B on Allegheny Ave. at high speed, f...\nNo\nAuto\nPedestrian\nNo\nNo arrest. Driver deceased.\n202224026326\n-75.115579\n39.995489\nNaN\nPOINT (-75.11558 39.99549)\n\n\n426\n341984\n2022\n24\n026326\n2022-05-10 04:00:00+00:00\nAllegheny Ave.\nKensington Ave.\n45.0\nM\nUnit #1 E/B on Allegheny Ave. at high speed, f...\nNo\nAuto\nPedestrian\nNo\nNo arrest. Driver deceased.\n202224026326\n-75.115579\n39.995489\nNaN\nPOINT (-75.11558 39.99549)\n\n\n427\n341985\n2022\n24\n026326\n2022-05-10 04:00:00+00:00\nAllegheny Ave.\nKensington Ave.\n40.0\nF\nUnit #1 E/B on Allegheny Ave. at high speed, f...\nNo\nAuto\nPedestrian\nNo\nNo arrest. Driver deceased.\n202224026326\n-75.115579\n39.995489\nNaN\nPOINT (-75.11558 39.99549)\n\n\n428\n341986\n2022\n25\n025840\n2022-05-12 04:00:00+00:00\n5th St.\nHunting Park Ave.\n18.0\nM\nUnit #1, (Auto), W/B on Hunting Park Ave. when...\nNo\nAuto\nDirt-bike\nNo\nNo arrest. Driver deceased.\n202225025840\n-75.135545\n40.015094\nNaN\nPOINT (-75.13554 40.01509)\n\n\n429\n341987\n2022\n12\n026044\n2022-05-12 04:00:00+00:00\nPaschall Ave.\n7000 Block\n50.0\nF\nBicyclist riding W/B in E/B lanes along side p...\nNo\nAuto\nBicycle\nPending\nUnder Investigation.\n202212026044\n-75.241161\n39.918834\nNaN\nPOINT (-75.24116 39.91883)\n\n\n\n\n\n\n\nCount number of crash points near each street segment.\n\n\nCode\nstreet_merge_crash_2022 = street.copy()\n# Create a new column in the geojson GeoDataFrame to store the point counts\nstreet_merge_crash_2022['crash_2022'] = street['geometry'].apply(\n    lambda x: count_points_near_segment(x, crash_2022['geometry'])\n)\nstreet_merge_crash_2022 = street_merge_crash_2022.sort_values(by='crash_2022', ascending=False)\nstreet_merge_crash_2022.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\ncrash_2022\n\n\n\n\n28135\n5400\n2\nGERMANTOWN AVE\n36660\n720528\n203.260643\nLINESTRING (-75.17061 40.03314, -75.17206 40.0...\n2\n\n\n17755\n3100\n2\nN BROAD ST\n19140\n540010\n233.942251\nLINESTRING (-75.15327 40.00001, -75.15293 40.0...\n2\n\n\n29420\n0\n4\nW COULTER ST\n25340\n722191\n113.689853\nLINESTRING (-75.17061 40.03314, -75.17067 40.0...\n2\n\n\n9063\n200\n2\nS 52ND ST\n88830\n400566\n85.461286\nLINESTRING (-75.22552 39.95696, -75.22564 39.9...\n2\n\n\n28136\n5300\n2\nGERMANTOWN AVE\n36660\n720529\n179.222127\nLINESTRING (-75.16933 40.03239, -75.17061 40.0...\n2\n\n\n\n\n\n\n\n\n\n2023\nPull out crashes from 2023.\n\n\nCode\ncrash['date_'] = crash['date_'].astype(str)\ncrash_2023 = crash[crash['date_'].str.contains('2023')]\n\n\n\n\n\n\n\n\n\nobjectid\nyear\ndistrict\ndc_number\ndate_\nprimary_st\nsecondary_\nage\nsex\ncrash_type\nhit_____ru\nveh1\nveh2\narrest_yes\ninvestigat\ndc_key\npoint_x\npoint_y\ntime_of_day__24hrs_\ngeometry\n\n\n\n\n0\n342178\n2023\n35\n067936\n2023-10-23 04:00:00+00:00\n1300 Windrim Ave.\nNaN\n32.0\nM\nUnit #1 was eastbound on the 1300 block of Win...\nNo\nAuto\nFixed Object\nNo\nThe deceased was the cause of the crash.\n202335067936\n-75.144326\n40.030786\nNaN\nPOINT (-75.14433 40.03079)\n\n\n1\n342179\n2023\n24\n074067\n2023-10-27 04:00:00+00:00\nLehigh Ave.\nJasper St.\n45.0\nF\nUnit #2 was stopped in traffic eastbound on Le...\nNo\nAuto\nAuto\nNo\nThe deceased was the cause of the crash.\n202324074067\n-75.124325\n39.988805\nNaN\nPOINT (-75.12432 39.98880)\n\n\n2\n342180\n2023\n24\n074067\n2023-10-27 04:00:00+00:00\nLehigh Ave.\nJasper St.\n57.0\nM\nUnit #2 was stopped in traffic eastbound on Le...\nNo\nAuto\nAuto\nNo\nThe person who caused the crash also died in t...\n202324074067\n-75.124325\n39.988805\nNaN\nPOINT (-75.12432 39.98880)\n\n\n3\n342181\n2023\n24\n075220\n2023-11-01 04:00:00+00:00\nLehigh Ave.\nEmerald St.\n33.0\nM\nUnit #2 was standing in the west crosswalk in ...\nYes\nAuto\nPedestrian\nNo\nActive investigation\n202324075220\n-75.123831\n39.988780\nNaN\nPOINT (-75.12383 39.98878)\n\n\n4\n342182\n2023\n14\n056753\n2023-10-25 04:00:00+00:00\n6329 Stenton Ave.\nNaN\n62.0\nM\nUnit #1 was northbound on Stenton when it stru...\nNo\nAuto\nPedestrian\nNo\nActive investigation\n202314056753\n-75.165143\n40.058944\nNaN\nPOINT (-75.16514 40.05894)\n\n\n\n\n\n\n\nCount number of crash points near each street segment.\n\n\nCode\nstreet_merge_crash_2023 = street.copy()\n# Create a new column in the geojson GeoDataFrame to store the point counts\nstreet_merge_crash_2023['crash_2023'] = street['geometry'].apply(\n    lambda x: count_points_near_segment(x, crash_2023['geometry'])\n)\nstreet_merge_crash_2023 = street_merge_crash_2023.sort_values(by='crash_2023', ascending=False)\nstreet_merge_crash_2023.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\ncrash_2023\n\n\n\n\n18926\n1800\n2\nE LEHIGH AVE\n49980\n541203\n192.773312\nLINESTRING (-75.12549 39.98985, -75.12438 39.9...\n3\n\n\n32641\n6100\n2\nHARBISON AVE\n40440\n761214\n117.938073\nLINESTRING (-75.06280 40.02441, -75.06269 40.0...\n2\n\n\n19052\n1900\n2\nE LEHIGH AVE\n49980\n541333\n171.514536\nLINESTRING (-75.12438 39.98883, -75.12339 39.9...\n2\n\n\n1550\n2200\n2\nPENROSE AVE\n64080\n221161\n551.293937\nLINESTRING (-75.18637 39.91005, -75.18712 39.9...\n2\n\n\n511\n2100\n2\nCOBBS CREEK PKWY\n24060\n200317\n244.834677\nLINESTRING (-75.24686 39.91877, -75.24690 39.9...\n2\n\n\n\n\n\n\n\n\n\nCombine Crash Data\n\n\nCode\nstreet_merge_crash = pd.merge(street_merge_crash_2022, \n                            street_merge_crash_2023, \n                            how = 'left', \n                            on =['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID','Shape__Length','geometry'])\nstreet_merge_crash.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\ncrash_2022\ncrash_2023\n\n\n\n\n0\n5400\n2\nGERMANTOWN AVE\n36660\n720528\n203.260643\nLINESTRING (-75.17061 40.03314, -75.17206 40.0...\n2\n0\n\n\n1\n3100\n2\nN BROAD ST\n19140\n540010\n233.942251\nLINESTRING (-75.15327 40.00001, -75.15293 40.0...\n2\n0\n\n\n2\n0\n4\nW COULTER ST\n25340\n722191\n113.689853\nLINESTRING (-75.17061 40.03314, -75.17067 40.0...\n2\n0\n\n\n3\n200\n2\nS 52ND ST\n88830\n400566\n85.461286\nLINESTRING (-75.22552 39.95696, -75.22564 39.9...\n2\n0\n\n\n4\n5300\n2\nGERMANTOWN AVE\n36660\n720529\n179.222127\nLINESTRING (-75.16933 40.03239, -75.17061 40.0...\n2\n0\n\n\n\n\n\n\n\n\n\nCode\nstreet_merge_crash.to_file(\"Data/street_merge_crash.geojson\", driver='GeoJSON')\n\n\n\n\n\nBicycle Level of Traffic Stress\nLoad in Bike Level of Traffic Stress data and city limits to trim the Bike LTS data to just Philadelphia.\n\n\nCode\nbike_LTS = gpd.read_file(\"Data/Bike_LTS.geojson\")\nbike_LTS = bike_LTS[['gid', 'length', 'lts_score', 'geometry']]\n\n# Download the Philadelphia city limits\nurl = \"https://opendata.arcgis.com/datasets/405ec3da942d4e20869d4e1449a2be48_0.geojson\"\ncity_limits = gpd.read_file(url).to_crs(epsg=4326)\n\nprint(bike_LTS.crs)\nprint(city_limits.crs)\n\n\nEPSG:4326\nEPSG:4326\n\n\nIterate over each street segment to pull the LTS score from the nearest bike_LTS segment.\n\n\nCode\nstreet_merge_bike = street.copy()\n\n# Iterate over each row in the 'street' GeoDataFrame\nfor index, street_row in street.iterrows():\n    # Extract the geometry of the street line segment\n    street_geometry = street_row['geometry']\n    \n    # Create a Point geometry from the centroid of the street line segment\n    street_centroid = Point(street_geometry.centroid)\n    \n    # Find the index of the nearest 'bike_LTS_clip' line segment\n    nearest_bike_index = bike_LTS_clip.geometry.distance(street_centroid).idxmin()\n    \n    # Extract the 'lts_score' from the nearest 'bike_LTS_clip' line segment\n    lts_score = bike_LTS_clip.loc[nearest_bike_index, 'lts_score']\n    \n    # Add a new column to the result GeoDataFrame with the 'lts_score' value\n    street_merge_bike.at[index, 'nearest_lts_score'] = lts_score\n    \nstreet_merge_bike.head()\n\n\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_25588\\2918275708.py:12: UserWarning: Geometry is in a geographic CRS. Results from 'distance' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  nearest_bike_index = bike_LTS_clip.geometry.distance(street_centroid).idxmin()\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_25588\\2918275708.py:12: UserWarning: Geometry is in a geographic CRS. Results from 'distance' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  nearest_bike_index = bike_LTS_clip.geometry.distance(street_centroid).idxmin()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\nnearest_lts_score\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n3\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n3\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n4\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n1\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n1\n\n\n\n\n\n\n\n\n\nCode\nstreet_merge_bike.to_file(\"Data/street_merge_bike.geojson\", driver='GeoJSON')\n\n\n\n\nCombine All Data\n\n\nCode\nstreet_merge_crash=gpd.read_file(\"Data/street_merge_crash.geojson\")\nstreet_merge_truck=gpd.read_file(\"Data/street_merge_truck.geojson\")\nstreet_merge_pav=gpd.read_file(\"Data/street_merge_pav.geojson\")\nstreet_merge_311=gpd.read_file(\"Data/street_merge_311.geojson\")\nstreet_merge_bike=gpd.read_file(\"Data/street_merge_bike.geojson\")\n\n\nstreet_merge = pd.merge(street, street_merge_crash, how='left', on=['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID', 'Shape__Length', 'geometry'])\n\nstreet_merge = pd.merge(street_merge, street_merge_truck, how='left', on=['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID', 'Shape__Length', 'geometry'])\n\nstreet_merge = pd.merge(street_merge, street_merge_pav, how='left', on=['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID', 'Shape__Length', 'geometry'])\n\nstreet_merge = pd.merge(street_merge, street_merge_311, how='left', on=['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID', 'Shape__Length', 'geometry'])\n\nstreet_merge = pd.merge(street_merge, street_merge_bike, how='left', on=['R_HUNDRED', 'CLASS', 'STNAME', 'ST_CODE', 'SEG_ID', 'Shape__Length', 'geometry'])\n\nstreet_merge.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ngeometry\ncrash_2022\ncrash_2023\nTruck\n2022_Paved\n2023_Paved\n311_2022\n311_2023\nnearest_lts_score\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0\n0\n0.0\n0.0\n1.0\n0\n0\n4\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\n\n\n\n\n\n\n\n\n\nCode\nstreet_merge.to_file(\"Data/street_merge.geojson\", driver='GeoJSON')"
  },
  {
    "objectID": "FinalProject/Data/Untitled.html",
    "href": "FinalProject/Data/Untitled.html",
    "title": "Step 4: Predict Paving",
    "section": "",
    "text": "Code\nfrom matplotlib import pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport hvplot.pandas\nimport requests\nimport seaborn as sns\nimport contextily as ctx\n\n# Models\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Model selection\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n\n# Pipelines\nfrom sklearn.pipeline import make_pipeline\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\nnp.random.seed(42)\n\npd.options.display.max_columns = 999\n%matplotlib inline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nstreet = gpd.read_file(\"Data/street_merge.geojson\")\nstreet.head()\n\n\nDriverError: Data/street_merge.geojson: No such file or directory\n\n\n\n\nCode\ncols_2022 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2022\",\n    \"Truck\",\n    \"2022_Paved\",\n    \"2023_Paved\",\n    \"311_2022\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2022 = street[cols_2022]\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2022_features = street_2022.drop(columns=cols_to_drop).copy()\n\nstreet_2022_features = street_2022_features.dropna(subset=['2022_Paved'])\nlen(street_2022_features)\n\n\n\n\nCode\nnumerical_features = ['crash_2022', '311_2022']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','2022_Paved']\ntarget_variable = '2023_Paved'\n\n# Creating feature and target dataframes\nX = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Creating a preprocessor for categorical features\ntransformer = ColumnTransformer(\n    transformers=[\n        (\"num\", StandardScaler(), numerical_features),\n        (\"cat\", \n         make_pipeline(SimpleImputer(strategy='constant', fill_value=0),  # Fill missing values with 0\n                       OneHotEncoder(handle_unknown=\"ignore\")),  # Apply OneHotEncoder\n         categorical_features)\n    ]\n)\n\n\n\n\nCode\n# Make a random forest pipeline\npipe = make_pipeline(\n    transformer, RandomForestClassifier(n_estimators=20, random_state=42)\n)\n\n# Fit on the training data\npipe.fit(X_train, y_train);\npipe.score(X_test, y_test)\n\ny_pred = pipe.predict(X_test)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nprint(f'Accuracy (Random Forest): {accuracy}')\n\n# Confusion Matrix\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# Classification Report\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred))\n\n\n\n\nCode\nX_new = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\ny_pred = pipe.predict(X_new)\n\nstreet_2022['2023_Paved_Predicted'] = y_pred\n\n# Display or save the updated dataset as needed\nstreet_2022.head()\n\n\n\n\nCode\nstreet_2022['predict_correct'] = (street_2022['2023_Paved'] == street_2022['2023_Paved_Predicted']).astype(int)\nstreet_2022.head()\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['grey', 'red'])\ncustom_cmap_2 = ListedColormap(['red','green'])\n\nfig, axes = plt.subplots(1, 3, figsize=(20, 6))\n\nstreet_2022.plot(column=\"2023_Paved\", \n                 cmap=custom_cmap_1, \n                 linewidth=0.4, \n                 legend=True, \n                 ax=axes[0],\n                 legend_kwds={'ticks': [0, 1]})\naxes[0].set_title('Actual Streets Repaved in 2023')\n\nstreet_2022.plot(column=\"2023_Paved_Predicted\", \n                 cmap=custom_cmap_1, \n                 linewidth=0.4, \n                 legend=True, \n                 ax=axes[1],\n                 legend_kwds={'ticks': [0, 1]})\naxes[1].set_title('Predicted Streets Repaved in 2023')\n\nstreet_2022.plot(column=\"predict_correct\", \n                 cmap=custom_cmap_2, \n                 linewidth=0.4, \n                 legend=True, \n                 ax=axes[2],\n                 legend_kwds={'ticks': [0, 1]})\naxes[2].set_title('Correct vs Incorrect Predictions')\n\nplt.tight_layout()\n\nfor ax in axes:\n    ax.set_axis_off()\n\nplt.show()"
  },
  {
    "objectID": "analysis/index.html",
    "href": "analysis/index.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\nAnalysis\nThis section includes examples of technical analysis done using Jupyter notebooks. Each sub-section highlights different types of analyses and visualizations. In particular, it highlights that we can easily publish interactive visualizations produced with packages such as hvPlot, altair, or Folium, without losing any of the interactive features.\nOn this page, you might want to share more introductory or background information about the analyses to help guide the reader."
  },
  {
    "objectID": "analysis/5-lecture9A.html",
    "href": "analysis/5-lecture9A.html",
    "title": "Lecture 9AFrom Notebooks to the Web: Quarto & GitHub Pages",
    "section": "",
    "text": "Section 401\nOctober 30, 2023"
  },
  {
    "objectID": "analysis/5-lecture9A.html#outline-for-the-rest-of-the-course",
    "href": "analysis/5-lecture9A.html#outline-for-the-rest-of-the-course",
    "title": "Lecture 9AFrom Notebooks to the Web: Quarto & GitHub Pages",
    "section": "Outline for the rest of the course",
    "text": "Outline for the rest of the course\nIn the next two weeks, we’ll discuss ways to translate our analysis results to the Web in a meaningful way. We’ll cover two methods to do so, each with their own pros and cons:\n\nEmbedding interactive charts on the Web via Quarto\nCreating dashboards using the Python library Panel\n\nThen, we transition into our “data science in the wild” case studies, where we’ll do a deeper dive into particular use cases, including:\n\nPredictive modeling and machine learning\nClustering algorithms\nAdvanced raster data"
  },
  {
    "objectID": "analysis/5-lecture9A.html#the-final-project",
    "href": "analysis/5-lecture9A.html#the-final-project",
    "title": "Lecture 9AFrom Notebooks to the Web: Quarto & GitHub Pages",
    "section": "The final project",
    "text": "The final project\nMore details uploaded here: https://github.com/MUSA-550-Fall-2023/final-project\n\nKey dates\n\nWritten proposal due date: Monday, December 4th (or earlier)\nProject due date: Wednesday, December 20th at 11:59 PM\n\nFinal projects must receive prior approval in the form of a written proposal."
  },
  {
    "objectID": "analysis/5-lecture9A.html#sharing-work-online-with-quarto-github-pages",
    "href": "analysis/5-lecture9A.html#sharing-work-online-with-quarto-github-pages",
    "title": "Lecture 9AFrom Notebooks to the Web: Quarto & GitHub Pages",
    "section": "Sharing work online with Quarto & GitHub Pages",
    "text": "Sharing work online with Quarto & GitHub Pages\nWe can create beautiful websites that describe complex technical analyses in Python using Quarto and deploy them online using GitHub Pages. This combination of tools is a really powerful way to create and share your work.\n\nQuarto\n\nQuarto is a relatively new tool, but is becoming popular quickly.\nIt’s the successor to the Rmarkdown ecosystem from the Rstudio team\nIt combines functionality into a single tool and also extends its computation power to other languages.\nMost importantly for us, Quarto supports executing Python code, allowing us to convert Jupyter notebooks to HTML and share them online.\nYou supports building multiple types of online content, including websites, blogs, and books.\n\n\n\nGitHub Pages\n\nGitHub Pages is static website generator that can be used to automatically generate a website from any GitHub repository.\nWe’ll use it to deploy our website content generated using Quarto\nEven though GitHub Pages is a static site (no server to execute code), it can embed interactive charts and maps and maintain the interactive functionality\n\nQuarto + GitHub Pages is very cool, and allows you to build very complex websites. The main website for this course is developed using Quarto + GitHub Pages!\n\n\n\n\n\n\nNote\n\n\n\nFor the final project, you’ll be asked to publish a Quarto website using GitHub pages that describes your analysis and results.\n\n\n\n\nThe example Quarto site\nI’ve set up a working example website so we can walk through the main features of Quarto. It will help us learn the basics of Quarto and serve as a reference, along with Quarto documentation, as you start to customize your own site.\nAnd the published site is available at: https://musa-550-fall-2023.github.io/quarto-website-template/\nLet’s start by exploring the different parts of the site.\n\nIn particular, we see a sidebar with three main parts:\n\nThe main home page entitled “Welcome”\nAnd about page\nAn “analysis” section with several sub-sections\n\n\n\nThe website’s repo\nLet’s go to this website’s GitHub repository: https://github.com/MUSA-550-Fall-2023/quarto-website-template.\nLet’s explore the different filenames first. Many of the files line up with the content we saw above displayed on the rendered website. These have red arrows marking them in the image below.\nYou’ll see the “analysis” folder and the rest in this site are .qmd files, which are special Quarto-flavored markdown files. They primarily contain Markdown text but can also (optionally) include executable code blocks (such as Python or R). The index.qmd is the home page. If you click inside “analysis” you’ll see a mix of file types, including .ipynb Jupyter notebook files and a .qmd markdown file.\n\nThe “docs” folder has all of the rendered HTML content that gets used to show the final website. The content matches all of the content in the input .qmd and .ipynb files, but these files have been processed by Quarto into HTML to be displayed in the browser.\n\n\nThe _quarto.yml configuration file\nThere is also a _quarto.yml file, which is the website’s configuration file. It is essentially metadata for the website that sets up the layout of the site and includes the order that the pages will be in. This is where you update the organization of your website: which page comes before another. If we compare side-by-side, you’ll see that the pages that appear on our website are listed there.\n \nNotice that there are multiple ways in the _quarto.yml for you to include a file in your website. Let’s take a closer look at the “contents” key, nested under the “sidebar” key.\nIn the above image, the “Welcome” page we see in the left sidebar of the published website (left image) is represented in _quarto.yml (right image) over two lines, with line 36 indicating the file reference (index.qmd) and line 37 indicating the text to show up in the left sidebar (Welcome). However, all of the other files (either .qmd or .ipynb) are just represented by a single line.\nThis represents two strategies for including a file in your website. By default, the title of a specified file will show up in the website’s sidebar, which is what is happening with most of the files in the sidebar. If you would like more control over what is written in the sidebar vs. the title of your files, then the approach we took with “Welcome” is what you’ll want to do: you’ll see that only “Welcome” shows up in the sidebar as we specified in _quarto.yml, but the page’s title says “MUSA 550 Final Project Template” (which I thought was too long for the sidebar).\n\n\n\n\n\n\nNote\n\n\n\nThis type of file (.yml or .yaml) is written in YAML (“Yet Another Markup Language”). In this language, spacing and indentation matters. Pay attention to whether text is indented by one, two, four, or other spaces, and make sure you follow it; if your site is not looking as expected it is likely a silent error in your YAML.\n\n\nLet’s explore the rest of the file:\n\nA few key things to know:\n\nThe “project” section tells Quarto to build a website and put the rendered output HTML in the “docs” folder\nThe content under the “website” key customizes the different parts of the website\n\nYou can customize the title, site-url, and repo-url to match your repository\nUnder “page-footer”, you can also customize the footer to say whatever you’d like\nUnder “sidebar”, you can customize the logo that shows up in the sidebar and the icons that show up below it as well\nYou should set the “contents” under “sidebar” to match the desired organization of your website\n\nThe “html” key under “format” sets some sensible defaults for how the HTML content should look. These defaults affect all pages, but you can change them for any particular page on the website.\n\n\n\n\n\n\n\nTip\n\n\n\nTake a look at the user guide section on HTML for some of the possible options for HTML pages.\nMore info on themes is available on the Quarto documentation.\n\n\n\n\nAdding technical content\nYou’ll notice in the “analysis” folder of the repo there are three Jupyter notebook files and a .qmd file.\nThere are two main ways to embed Python code (and its associated output) in a Quarto website:\n\nBy directly using .ipynb files. Quarto will execute all cells in the file and convert to HTML.\nBy including a Python code block in the .qmd markdown file directly.\n\nIn many ways, .ipynb and .qmd files are very similar — you can think of them as a mix of Markdown text and executable Python code!\n\nFormating code blocks\nQuarto let’s you customize how code blocks show up, or if they show up at all. This can be done in either:\n\nThe metadata header for a file, or\nA comment in the code cell itself\n\n\n\n1. Hiding code cells\nFor example, in the first cell of the 3-altair-hvplot.ipynb notebook file, we have a Markdown cell that hides all code via the echo: false option:\n\nBut you can hide individual code cells from showing up in the output using a special comment in the cell:\n\n\n\n2. Folding code cells\nSimilarly, you can “echo” the code block’s content but “fold” it such that readers need to click an arrow to show the code block:\n\n\n\n\n\n\n\n\nTip\n\n\n\nCheck out the Quarto docs for more information on: - Available options for Python code blocks - Customizing HTML code block formatting\n\n\n\n\n\nStarting from a template\nThe example website we’ve been discussing today is a template repository. This means that you can use the template to get a completely independent copy of the repository under your own username. From then on, you can make any changes you’d like without affecting the original repository.\nLet’s walk through the steps for creating your own copy.\n\nStep 1: Create your own repository\n\nStart from the main repository: https://github.com/MUSA-550-Fall-2023/quarto-website-template\nThis repository is a template repository\nClick on the “Use this template” button and then “Create a new repository” to create your own version of the repository\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor more information, see this guide on creating a repository from a template.\n\n\n\n\nStep 2: Choose a name and description\n\n\n\nStep 3: Set up the repository to deploy via GitHub Pages\nIf you have a repository with content rendered via Quarto, deploying via GitHub Pages is easy.\nFirst, make sure the “output-dir” key under “project” in your _quarto.yml file is set to “docs”. This ensures that the content for your rendered site is stored in the “docs” folder. Note: This is already set up in the template repository\nThen, go to the “Settings” tab for your repository, and turn on GitHub Pages on the “main” branch and tell it to use the “docs” folder.\n\nClick on the Pages button in the left sidebar, and under “Build and Deployment” make sure you are building from the “main” branch and “docs” folder.\nThis will automatically build the website at the following URL: https://[USERNAME].github.io/[REPOSITORY NAME]\n\n\n\n\nThe editing workflow\nNow, let’s talk about how to make edits and customize the template repository! Since we’re most familiar with Jupyter notebook files, my suggested workflow is:\n\nClone or download your repository content from GitHub to your local computer.\nAuthor content in JupyterLab: write Markdown text, code, etc. JupyterLab will support editing both .qmd and .ipynb files.\nUpdate _quarto.yml as needed (for example, if you’ve created a new file you’d like included in your site)\nRender individual files and/or the whole website using quarto.\nIterate and repeat as necessary.\nCommit and push your new website content back to GitHub, your updates will publish automatically!\n\n\n\n\n\n\n\nImportant\n\n\n\nFor this workflow, you’ll need to install both Quarto and Git (via GitHub Desktop). We’ll set these up and try it out in the exercise today."
  },
  {
    "objectID": "analysis/5-lecture9A.html#exercise-set-up-your-own-github-pages-project-page",
    "href": "analysis/5-lecture9A.html#exercise-set-up-your-own-github-pages-project-page",
    "title": "Lecture 9AFrom Notebooks to the Web: Quarto & GitHub Pages",
    "section": "Exercise: Set up your own Github Pages project page",
    "text": "Exercise: Set up your own Github Pages project page\nThe goal of this exercise is to make a copy of the template repository, make some small changes, render the new site, and deploy via GitHub pages. We’ll need to do the following:\n\nStep 1: Install Quarto\nThe site https://quarto.org/docs/get-started/ describes how to install Quarto, which will depend on your operating system.\nAfter following the installation instructions, you can test your installation by opening your command line (Terminal in Mac OS or Miniforge Prompt in Windows) and running:\nquarto --help\nThis should print out the help message for the quarto command.\n\n\nStep 2: Install GitHub Desktop\nWe’ll be rendering our site content with the quarto command locally on our computer, which will generate lots of new changes in the “docs” folder of the website’s repository. We’ll then need to commit all of those changes to our version history, and push them to GitHub. It will be easiest to do this using the GitHub Desktop application.\nIf you don’t have GitHub Desktop installed yet, you can download and install it here: https://desktop.github.com/\n\n\n\n\n\n\nTip\n\n\n\nIf you’re new to GitHub Desktop, check out the quickstart guide.\n\n\n\n\nStep 3: Create your own repository\n\nUse the above instructions to create your own copy of the template repository.\nThen, open the repository locally by clicking on the “&lt;&gt; Code” button and choosing the “Open in GitHub Desktop” option\n\n\n\n\nStep 4: Make some edits\nFirst, find out the path for the downloaded repository and launch JupyterLab: - In GitHub Desktop, find out the path for the downloaded code by using the option to “Open in Explorer” or “View in Finder.” This should give you the file path of the downloaded repository. - Navigate to that folder, activate our course’s environment, and launch JupyterLab.\nThen, make some edits: - In JupyterLab, make changes to your _quarto.yml to update the name, repository info, etc. - Add a Jupyter notebook file with some example code and add it to the _quarto.yml file.\n\n\nStep 5: Preview your changes\nYou can launch a local version of your website to preview your changes. There are three steps involved:\nStep 1. First, launch a new Miniforge Prompt (Windows) or Terminal (Mac OS) window. Navigate to the folder for your Quarto website.\nStep 2. From the command line, activate our course environment by running: mamba activate musa-550-fall-2023\nStep 3. From the command line, run the following command: quarto preview .\nThis should open a new tab in your browser with URL localhost:3333 that will show a live preview of your site. You can make edits to the files in JupyterLab and the live preview will update automatically!\n\n\nStep 6: Render your website\nOnce you’re satisfied with your site via the preview, it’s time to render the full website. This create a fresh set of rendered content in the “docs” folder, which will contain all of the code necessary to deploy your website online.\nOnce again, there are three steps involved:\nStep 1. First, launch a new Miniforge Prompt (Windows) or Terminal (Mac OS) window. Navigate to the folder for your Quarto website.\nStep 2. From the command line, activate our course environment by running: mamba activate musa-550-fall-2023\nStep 3. From the command line, run the following command: quarto render .\nNow, we’re ready to push changes to GitHub and deploy!\n\n\nStep 7: Commit and push your changes\nAfter the last step, we have updated content that we need to commit and push to GitHub. We’ll do that in GitHub Desktop. The steps involved are:\n\nOpen your repository in GitHub Desktop.\nYou should see a number of local changes – this is the content we just generated when we rendered the site. We’ll need to commit these changes so they are saved in the repository’s version history. To do that, you can follow these instructions. You’ll need to write a commit message and hit the “Commit to main” button in the lower left part of GitHub Desktop.\nNow, we’ll sync these changes with GitHub by pushing the changes. Instructions for how to do that are available here\n\nOnce you push your changes, your repository will automatically update the deployed website!"
  },
  {
    "objectID": "analysis/3-altair-hvplot.html",
    "href": "analysis/3-altair-hvplot.html",
    "title": "Altair and Hvplot Charts",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive charts produced using Altair and hvPlot."
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in Altair",
    "text": "Example: Measles Incidence in Altair\nFirst, let’s load the data for measles incidence in wide format:\n\n\nCode\nurl = \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/measles_incidence.csv\"\ndata = pd.read_csv(url, skiprows=2, na_values=\"-\")\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nWEEK\nALABAMA\nALASKA\nARIZONA\nARKANSAS\nCALIFORNIA\nCOLORADO\nCONNECTICUT\nDELAWARE\n...\nSOUTH DAKOTA\nTENNESSEE\nTEXAS\nUTAH\nVERMONT\nVIRGINIA\nWASHINGTON\nWEST VIRGINIA\nWISCONSIN\nWYOMING\n\n\n\n\n0\n1928\n1\n3.67\nNaN\n1.90\n4.11\n1.38\n8.38\n4.50\n8.58\n...\n5.69\n22.03\n1.18\n0.4\n0.28\nNaN\n14.83\n3.36\n1.54\n0.91\n\n\n1\n1928\n2\n6.25\nNaN\n6.40\n9.91\n1.80\n6.02\n9.00\n7.30\n...\n6.57\n16.96\n0.63\nNaN\n0.56\nNaN\n17.34\n4.19\n0.96\nNaN\n\n\n2\n1928\n3\n7.95\nNaN\n4.50\n11.15\n1.31\n2.86\n8.81\n15.88\n...\n2.04\n24.66\n0.62\n0.2\n1.12\nNaN\n15.67\n4.19\n4.79\n1.36\n\n\n3\n1928\n4\n12.58\nNaN\n1.90\n13.75\n1.87\n13.71\n10.40\n4.29\n...\n2.19\n18.86\n0.37\n0.2\n6.70\nNaN\n12.77\n4.66\n1.64\n3.64\n\n\n4\n1928\n5\n8.03\nNaN\n0.47\n20.79\n2.38\n5.13\n16.80\n5.58\n...\n3.94\n20.05\n1.57\n0.4\n6.70\nNaN\n18.83\n7.37\n2.91\n0.91\n\n\n\n\n5 rows × 53 columns\n\n\n\nThen, use the pandas.melt() function to convert it to tidy format:\n\n\nCode\nannual = data.drop(\"WEEK\", axis=1)\nmeasles = annual.groupby(\"YEAR\").sum().reset_index()\nmeasles = measles.melt(id_vars=\"YEAR\", var_name=\"state\", value_name=\"incidence\")\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nstate\nincidence\n\n\n\n\n0\n1928\nALABAMA\n334.99\n\n\n1\n1929\nALABAMA\n111.93\n\n\n2\n1930\nALABAMA\n157.00\n\n\n3\n1931\nALABAMA\n337.29\n\n\n4\n1932\nALABAMA\n10.21\n\n\n\n\n\n\n\nFinally, load altair:\n\n\nCode\nimport altair as alt\n\n\nAnd generate our final data viz:\n\n\nCode\n# use a custom color map\ncolormap = alt.Scale(\n    domain=[0, 100, 200, 300, 1000, 3000],\n    range=[\n        \"#F0F8FF\",\n        \"cornflowerblue\",\n        \"mediumseagreen\",\n        \"#FFEE00\",\n        \"darkorange\",\n        \"firebrick\",\n    ],\n    type=\"sqrt\",\n)\n\n# Vertical line for vaccination year\nthreshold = pd.DataFrame([{\"threshold\": 1963}])\n\n# plot YEAR vs state, colored by incidence\nchart = (\n    alt.Chart(measles)\n    .mark_rect()\n    .encode(\n        x=alt.X(\"YEAR:O\", axis=alt.Axis(title=None, ticks=False)),\n        y=alt.Y(\"state:N\", axis=alt.Axis(title=None, ticks=False)),\n        color=alt.Color(\"incidence:Q\", sort=\"ascending\", scale=colormap, legend=None),\n        tooltip=[\"state\", \"YEAR\", \"incidence\"],\n    )\n    .properties(width=650, height=500)\n)\n\nrule = alt.Chart(threshold).mark_rule(strokeWidth=4).encode(x=\"threshold:O\")\n\nout = chart + rule\nout"
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in hvplot",
    "text": "Example: Measles Incidence in hvplot\n\n\n\n\n\n\n\n\n\n\n\n\nGenerate the same data viz in hvplot:\n\n\nCode\n# Make the heatmap with hvplot\nheatmap = measles.hvplot.heatmap(\n    x=\"YEAR\",\n    y=\"state\",\n    C=\"incidence\", # color each square by the incidence\n    reduce_function=np.sum, # sum the incidence for each state/year\n    frame_height=450,\n    frame_width=600,\n    flip_yaxis=True,\n    rot=90,\n    colorbar=False,\n    cmap=\"viridis\",\n    xlabel=\"\",\n    ylabel=\"\",\n)\n\n# Some additional formatting using holoviews \n# For more info: http://holoviews.org/user_guide/Customizing_Plots.html\nheatmap = heatmap.redim(state=\"State\", YEAR=\"Year\")\nheatmap = heatmap.opts(fontsize={\"xticks\": 0, \"yticks\": 6}, toolbar=\"above\")\nheatmap"
  },
  {
    "objectID": "analysis/1-python-code-blocks.html",
    "href": "analysis/1-python-code-blocks.html",
    "title": "Python code blocks",
    "section": "",
    "text": "This is an example from the Quarto documentation that shows how to mix executable Python code blocks into a markdown file in a “Quarto markdown” .qmd file.\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Welcome to my channel.\nLike and subscribe.\nMy name is Emmy Park, a mere student for the course. You can find more information about me on my personal website.\nThis site is an example site showing how to use Quarto for the final project for MUSA 550, during fall 2023.\nAdipisicing proident minim non non dolor quis. Pariatur in ipsum aliquip magna. Qui ad aliqua nulla excepteur dolor nostrud quis nisi. Occaecat proident eiusmod in cupidatat. Elit qui laboris sit aliquip proident dolore. Officia commodo commodo in eiusmod aliqua sint cupidatat consectetur aliqua sint reprehenderit.\nOccaecat incididunt esse et elit adipisicing sit est cupidatat consequat. Incididunt exercitation amet dolor non sit anim veniam veniam sint velit. Labore irure reprehenderit ut esse. Minim quis commodo nisi voluptate."
  },
  {
    "objectID": "analysis/2-static-images.html",
    "href": "analysis/2-static-images.html",
    "title": "Showing static visualizations",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and demonstrates how to generate static visualizations with matplotlib, pandas, and seaborn.\nStart by importing the packages we need:\nCode\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nLoad the “Palmer penguins” dataset from week 2:\nCode\n# Load data on Palmer penguins\npenguins = pd.read_csv(\"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/penguins.csv\")\nCode\n# Show the first ten rows\npenguins.head(n=10)    \n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190.0\n3650.0\nmale\n2007\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181.0\n3625.0\nfemale\n2007\n\n\n7\nAdelie\nTorgersen\n39.2\n19.6\n195.0\n4675.0\nmale\n2007\n\n\n8\nAdelie\nTorgersen\n34.1\n18.1\n193.0\n3475.0\nNaN\n2007\n\n\n9\nAdelie\nTorgersen\n42.0\n20.2\n190.0\n4250.0\nNaN\n2007"
  },
  {
    "objectID": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "href": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "title": "Showing static visualizations",
    "section": "A simple visualization, 3 different ways",
    "text": "A simple visualization, 3 different ways\n\nI want to scatter flipper length vs. bill length, colored by the penguin species\n\n\nUsing matplotlib\n\n\nCode\n# Setup a dict to hold colors for each species\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Initialize the figure \"fig\" and axes \"ax\"\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Group the data frame by species and loop over each group\n# NOTE: \"group\" will be the dataframe holding the data for \"species\"\nfor species, group_df in penguins.groupby(\"species\"):\n\n    # Plot flipper length vs bill length for this group\n    # Note: we are adding this plot to the existing \"ax\" object\n    ax.scatter(\n        group_df[\"flipper_length_mm\"],\n        group_df[\"bill_length_mm\"],\n        marker=\"o\",\n        label=species,\n        color=color_map[species],\n        alpha=0.75,\n        zorder=10\n    )\n\n# Plotting is done...format the axes!\n\n## Add a legend to the axes\nax.legend(loc=\"best\")\n\n## Add x-axis and y-axis labels\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\n\n## Add the grid of lines\nax.grid(True);\n\n\n\n\n\n\n\nHow about in pandas?\nDataFrames have a built-in “plot” function that can make all of the basic type of matplotlib plots!\nFirst, we need to add a new “color” column specifying the color to use for each species type.\nUse the pd.replace() function: it use a dict to replace values in a DataFrame column.\n\n\nCode\n# Calculate a list of colors\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Map species name to color \npenguins[\"color\"] = penguins[\"species\"].replace(color_map)\n\npenguins.head()\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\ncolor\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n#1f77b4\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n#1f77b4\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n#1f77b4\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n#1f77b4\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n#1f77b4\n\n\n\n\n\n\n\nNow plot!\n\n\nCode\n# Same as before: Start by initializing the figure and axes\nfig, myAxes = plt.subplots(figsize=(10, 6))\n\n# Scatter plot two columns, colored by third\n# Use the built-in pandas plot.scatter function\npenguins.plot.scatter(\n    x=\"flipper_length_mm\",\n    y=\"bill_length_mm\",\n    c=\"color\",\n    alpha=0.75,\n    ax=myAxes, # IMPORTANT: Make sure to plot on the axes object we created already!\n    zorder=10\n)\n\n# Format the axes finally\nmyAxes.set_xlabel(\"Flipper Length (mm)\")\nmyAxes.set_ylabel(\"Bill Length (mm)\")\nmyAxes.grid(True);\n\n\n\n\n\nNote: no easy way to get legend added to the plot in this case…\n\n\nSeaborn: statistical data visualization\nSeaborn is designed to plot two columns colored by a third column…\n\n\nCode\n# Initialize the figure and axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# style keywords as dict\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\nstyle = dict(palette=color_map, s=60, edgecolor=\"none\", alpha=0.75, zorder=10)\n\n# use the scatterplot() function\nsns.scatterplot(\n    x=\"flipper_length_mm\",  # the x column\n    y=\"bill_length_mm\",  # the y column\n    hue=\"species\",  # the third dimension (color)\n    data=penguins,  # pass in the data\n    ax=ax,  # plot on the axes object we made\n    **style  # add our style keywords\n)\n\n# Format with matplotlib commands\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\nax.grid(True)\nax.legend(loc=\"best\");"
  },
  {
    "objectID": "analysis/4-folium.html",
    "href": "analysis/4-folium.html",
    "title": "Interactive Maps with Folium",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive maps produced using Folium."
  },
  {
    "objectID": "analysis/4-folium.html#finding-the-shortest-route",
    "href": "analysis/4-folium.html#finding-the-shortest-route",
    "title": "Interactive Maps with Folium",
    "section": "Finding the shortest route",
    "text": "Finding the shortest route\nThis example finds the shortest route between the Art Musuem and the Liberty Bell using osmnx.\n\n\nCode\nimport osmnx as ox\n\n\nFirst, identify the lat/lng coordinates for our places of interest. Use osmnx to download the geometries for the Libery Bell and Art Museum.\n\n\nCode\nphilly_tourism = ox.features_from_place(\"Philadelphia, PA\", tags={\"tourism\": True})\n\n\n\n\nCode\nart_museum = philly_tourism.query(\"name == 'Philadelphia Museum of Art'\").squeeze()\n\nart_museum.geometry\n\n\n\n\n\n\n\nCode\nliberty_bell = philly_tourism.query(\"name == 'Liberty Bell'\").squeeze()\n\nliberty_bell.geometry\n\n\n\n\n\nNow, extract the lat and lng coordinates\nFor the Art Museum geometry, we can use the .geometry.centroid attribute to calculate the centroid of the building footprint.\n\n\nCode\nliberty_bell_x = liberty_bell.geometry.x\nliberty_bell_y = liberty_bell.geometry.y\n\n\n\n\nCode\nart_museum_x = art_museum.geometry.centroid.x\nart_museum_y = art_museum.geometry.centroid.y\n\n\nNext, use osmnx to download the street graph around Center City.\n\n\nCode\nG_cc = ox.graph_from_address(\n    \"City Hall, Philadelphia, USA\", dist=1500, network_type=\"drive\"\n)\n\n\nNext, identify the nodes in the graph closest to our points of interest.\n\n\nCode\n# Get the origin node (Liberty Bell)\norig_node = ox.nearest_nodes(G_cc, liberty_bell_x, liberty_bell_y)\n\n# Get the destination node (Art Musuem)\ndest_node = ox.nearest_nodes(G_cc, art_museum_x, art_museum_y)\n\n\nFind the shortest path, based on the distance of the edges:\n\n\nCode\n# Get the shortest path --&gt; just a list of node IDs\nroute = ox.shortest_path(G_cc, orig_node, dest_node, weight=\"length\")\n\n\nHow about an interactive version?\nosmnx has a helper function ox.utils_graph.route_to_gdf() to convert a route to a GeoDataFrame of edges.\n\n\nCode\nox.utils_graph.route_to_gdf(G_cc, route, weight=\"length\").explore(\n    tiles=\"cartodb positron\",\n    color=\"red\",\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/4-folium.html#examining-trash-related-311-requests",
    "href": "analysis/4-folium.html#examining-trash-related-311-requests",
    "title": "Interactive Maps with Folium",
    "section": "Examining Trash-Related 311 Requests",
    "text": "Examining Trash-Related 311 Requests\nFirst, let’s load the dataset from a CSV file and convert to a GeoDataFrame:\n\n\nCode\n# Load the data from a CSV file into a pandas DataFrame\ntrash_requests_df = pd.read_csv(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/trash_311_requests_2020.csv\"\n)\n\n# Remove rows with missing geometry\ntrash_requests_df = trash_requests_df.dropna(subset=[\"lat\", \"lon\"])\n\n\n# Create our GeoDataFrame with geometry column created from lon/lat\ntrash_requests = gpd.GeoDataFrame(\n    trash_requests_df,\n    geometry=gpd.points_from_xy(trash_requests_df[\"lon\"], trash_requests_df[\"lat\"]),\n    crs=\"EPSG:4326\",\n)\n\n\nLoad neighborhoods and do the spatial join to associate a neighborhood with each ticket:\n\n\nCode\n# Load the neighborhoods\nneighborhoods = gpd.read_file(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/zillow_neighborhoods.geojson\"\n)\n\n# Do the spatial join to add the \"ZillowName\" column\nrequests_with_hood = gpd.sjoin(\n    trash_requests,\n    neighborhoods.to_crs(trash_requests.crs),\n    predicate=\"within\",\n)\n\n\nLet’s explore the 311 requests in the Greenwich neighborhood of the city:\n\n\nCode\n# Extract out the point tickets for Greenwich\ngreenwich_tickets = requests_with_hood.query(\"ZillowName == 'Greenwich'\")\n\n\n\n\nCode\n# Get the neighborhood boundary for Greenwich\ngreenwich_geo = neighborhoods.query(\"ZillowName == 'Greenwich'\")\n\ngreenwich_geo.squeeze().geometry\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nQuarto has callout blocks that you can use to emphasize content in different ways. This is a “Note” callout block. More info is available on the Quarto documentation.\n\n\nImport the packages we need:\n\n\nCode\nimport folium\nimport xyzservices\n\n\nCombine the tickets as markers and the neighborhood boundary on the same Folium map:\n\n\nCode\n# Plot the neighborhood boundary\nm = greenwich_geo.explore(\n    style_kwds={\"weight\": 4, \"color\": \"black\", \"fillColor\": \"none\"},\n    name=\"Neighborhood boundary\",\n    tiles=xyzservices.providers.CartoDB.Voyager,\n)\n\n\n# Add the individual tickets as circle markers and style them\ngreenwich_tickets.explore(\n    m=m,  # Add to the existing map!\n    marker_kwds={\"radius\": 7, \"fill\": True, \"color\": \"crimson\"},\n    marker_type=\"circle_marker\", # or 'marker' or 'circle'\n    name=\"Tickets\",\n)\n\n# Hse folium to add layer control\nfolium.LayerControl().add_to(m)\n\nm  # show map\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/6-lecture6A.html",
    "href": "analysis/6-lecture6A.html",
    "title": "Week 6AWeb Scraping",
    "section": "",
    "text": "Code\nimport pandas as pd"
  },
  {
    "objectID": "analysis/6-lecture6A.html#the-roadmap",
    "href": "analysis/6-lecture6A.html#the-roadmap",
    "title": "Week 6AWeb Scraping",
    "section": "The roadmap",
    "text": "The roadmap\nMoving in to our “getting data” modules\n\nToday: web scraping\nNext week: APIs, Census data, natural language processing\nThen: big data, geo data science in the wild, dashboarding & web servers, machine learning\n\nThe final project will ask you to combine several of these topics/techniques to analyze a data sets and produce a web-based data visualization"
  },
  {
    "objectID": "analysis/6-lecture6A.html#today-web-scraping",
    "href": "analysis/6-lecture6A.html#today-web-scraping",
    "title": "Week 6AWeb Scraping",
    "section": "Today: web scraping",
    "text": "Today: web scraping\n\nWhy web scraping?\nGetting familiar with the Web\nWeb scraping: extracting data from static sites\nHow to deal with dynamic content"
  },
  {
    "objectID": "analysis/6-lecture6A.html#what-is-web-scraping",
    "href": "analysis/6-lecture6A.html#what-is-web-scraping",
    "title": "Week 6AWeb Scraping",
    "section": "What is web scraping?",
    "text": "What is web scraping?\nUsing software to gather and extract data/content from websites"
  },
  {
    "objectID": "analysis/6-lecture6A.html#why-is-web-scraping-useful",
    "href": "analysis/6-lecture6A.html#why-is-web-scraping-useful",
    "title": "Week 6AWeb Scraping",
    "section": "Why is web scraping useful?",
    "text": "Why is web scraping useful?\n\nNot every data source provides an API\nThe Web contains a lot of information\nUnique data sources that may not be available elsewhere"
  },
  {
    "objectID": "analysis/6-lecture6A.html#what-is-possible-11-million-rental-listings-from-craigslist",
    "href": "analysis/6-lecture6A.html#what-is-possible-11-million-rental-listings-from-craigslist",
    "title": "Week 6AWeb Scraping",
    "section": "What is possible: 11 million rental listings from Craigslist",
    "text": "What is possible: 11 million rental listings from Craigslist\n\n\n\nSource: Geoff Boeing"
  },
  {
    "objectID": "analysis/6-lecture6A.html#why-isnt-web-scraping-incredibly-popular",
    "href": "analysis/6-lecture6A.html#why-isnt-web-scraping-incredibly-popular",
    "title": "Week 6AWeb Scraping",
    "section": "Why isn’t web scraping incredibly popular?",
    "text": "Why isn’t web scraping incredibly popular?\n\nIt can be time consuming and difficult to extract large volumes\nYou are at the mercy of website maintainers — if the website structure changes, your code breaks\nMost importantly, there are ethical and legal concerns"
  },
  {
    "objectID": "analysis/6-lecture6A.html#legal-concerns",
    "href": "analysis/6-lecture6A.html#legal-concerns",
    "title": "Week 6AWeb Scraping",
    "section": "Legal concerns",
    "text": "Legal concerns\nRadPad scraped the entirety of Craiglist, Craigslist sued RadPad, and they were awarded $60 million"
  },
  {
    "objectID": "analysis/6-lecture6A.html#two-types-of-legal-issues",
    "href": "analysis/6-lecture6A.html#two-types-of-legal-issues",
    "title": "Week 6AWeb Scraping",
    "section": "Two types of legal issues",
    "text": "Two types of legal issues\n\nCopyright infringement\n\nFor example: pictures, rental listing text\n\nTerms of Use violations\n\nUnauthorized: Is scraping prohibited in the website’s terms of use?\nIntentional: Was the person aware of the terms? Did they check an “I agree to these terms” box?\nCauses damage: Did the scraping overload the website, blocking user access?"
  },
  {
    "objectID": "analysis/6-lecture6A.html#web-scraping-public-sites-is-legal",
    "href": "analysis/6-lecture6A.html#web-scraping-public-sites-is-legal",
    "title": "Week 6AWeb Scraping",
    "section": "Web scraping public sites is legal",
    "text": "Web scraping public sites is legal\n\nRuling from 2022 said that scraping data that is publicly accessible on the internet is not a violation of the Computer Fraud and Abuse Act\nLinkedin had sued a competitor for scraping publicly available information from user profiles\n\nMore info on the case"
  },
  {
    "objectID": "analysis/6-lecture6A.html#some-more-problematic-use-cases",
    "href": "analysis/6-lecture6A.html#some-more-problematic-use-cases",
    "title": "Week 6AWeb Scraping",
    "section": "Some more problematic use cases",
    "text": "Some more problematic use cases\n\nThe facial recognition startup Clearview AI scraped billions of photos from social media websites. They recently settled a class action lawsuit that alleged they violated privacy laws\nWeb scraping at a massive scale has been a key ingredient in generating the training datasets for generative AI models like ChatGPT. Companies like OpenAI and Meta have been sued by authors and other content creators for violating copyright laws."
  },
  {
    "objectID": "analysis/6-lecture6A.html#when-is-web-scraping-probably-okay",
    "href": "analysis/6-lecture6A.html#when-is-web-scraping-probably-okay",
    "title": "Week 6AWeb Scraping",
    "section": "When is web scraping probably okay?",
    "text": "When is web scraping probably okay?\n\n.gov sites and, to a lesser degree, .edu sites\nWebsite owner has no business reason to protect the information\nNot prohibited in terms of use\nLimited number of requests\nNot too many requests all at once\nDone at night, when web traffic is low"
  },
  {
    "objectID": "analysis/6-lecture6A.html#when-is-it-less-likely-to-be-okay",
    "href": "analysis/6-lecture6A.html#when-is-it-less-likely-to-be-okay",
    "title": "Week 6AWeb Scraping",
    "section": "When is it less likely to be okay?",
    "text": "When is it less likely to be okay?\n\nsearch engines\nE-commerce sites (e.g. Zillow, Expedia, Amazon)\nSocial media\nProhibited in terms of use\nLarge number of requests\nHigh frequency of requests\n\nWith that being said, let’s do some web scraping…"
  },
  {
    "objectID": "analysis/6-lecture6A.html#a-primer-on-web-definitions",
    "href": "analysis/6-lecture6A.html#a-primer-on-web-definitions",
    "title": "Week 6AWeb Scraping",
    "section": "A primer on Web definitions",
    "text": "A primer on Web definitions\nSo many acronyms:\n\nHTML\nThe DOM\nCSS"
  },
  {
    "objectID": "analysis/6-lecture6A.html#html-hypertext-markup-language",
    "href": "analysis/6-lecture6A.html#html-hypertext-markup-language",
    "title": "Week 6AWeb Scraping",
    "section": "1. HTML: HyperText Markup Language",
    "text": "1. HTML: HyperText Markup Language\n\nThe language most websites are written in\nThe browser knows how to read this language and renders the output for you\nHTML is what a web crawler will see\n\n\nHTML tags\n\nThere are a standard set of tags to define the different structural components of a webpage\nFor example:\n\n&lt;h1&gt;, &lt;h2&gt; tags define headers\n&lt;p&gt; tags define paragraphs\n&lt;ol&gt; and &lt;ul&gt; are ordered and unordered lists\n\n\n\n\nJupyter notebooks can render HTML\nUse the %%html magic cell command\n\n\nCode\n%%html\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;TITLE GOES HERE&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h3&gt;MAIN CONTENT GOES IN THE BODY TAG&lt;/h3&gt;\n    &lt;p&gt;This is a paragraph tag&lt;/p&gt;\n    &lt;p&gt;This is a second paragraph tag&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n\n\n  \n    TITLE GOES HERE\n  \n  \n    MAIN CONTENT GOES IN THE BODY TAG\n    This is a paragraph tag\n    This is a second paragraph tag\n  \n\n\n\n\n\nElements, tags, and attributes\nLearning the notation:\n\n\nCode\n%%html\n\n&lt;a id=\"my-link\" style=\"color: orange;\" href=\"https://www.design.upenn.edu\" target=\"blank_\"&gt;This is my link&lt;/a&gt;\n\n\n\nThis is my link\n\n\nThe element: \nThe tag: \nThe attributes:\n\n\n\nSome attributes have special meaning\n\nIn particular: id and class\nAllows you to:\n\nselect and manipulate specific elements\napply styling to specific types of elements"
  },
  {
    "objectID": "analysis/6-lecture6A.html#css-cascading-stylesheets",
    "href": "analysis/6-lecture6A.html#css-cascading-stylesheets",
    "title": "Week 6AWeb Scraping",
    "section": "2. CSS: Cascading Stylesheets",
    "text": "2. CSS: Cascading Stylesheets\n\nA language for styling HTML pages\nCSS styles (also known as selectors) are applied to HTML tags based on their name, class, or ID.\n\n\n\n\n\nBasic Web selectors\n\nClass\n\ne.g., .red\n\nID\n\ne.g., #some-id\n\nTag\n\ne.g., p, li, div\n\nIDs: unique identifiers\n\nno two elements on a page will have the same ID.\n\nClasses: not unique\n\nmany elements will have the same class\na single element can have multiple classes\n\n\nAnd many more: look up the syntax when you need it\nhttps://www.w3schools.com/cssref/css_selectors.asp"
  },
  {
    "objectID": "analysis/6-lecture6A.html#the-dom-document-object-model",
    "href": "analysis/6-lecture6A.html#the-dom-document-object-model",
    "title": "Week 6AWeb Scraping",
    "section": "3. The DOM: Document Object Model",
    "text": "3. The DOM: Document Object Model\n\nAn interactive object tree created from the HTML tag hierarchy on a page\nCreated by the browser\nTracks user interactions\nIt is dynamic: stores the current state of the webpage\n\n\nInspecting a webpage\n\nModern web browsers provide tools for inspecting the source HTML and DOM of websites\nAlso tells you data sources that have been loaded by the page\nThis should also be your first step when starting to scrape a page\n\n\n\n\n\n\n\nTip\n\n\n\nTo load the Web Inspector in most modern browsers, you can simply hit the F12 button\n\n\n\n\n\nThe Elements tab\n\nAllows you to inspect the DOM directly\nThe tool that will allow you to identify what data you want to scrape from a website\n\n\n\n\n\n\n\n\nTip: Viewing an element’s source code\n\n\n\n\nRight click on the element you want to view\nClick on “Inspect”\nThe element will be highlighted in the DOM (in the Elements tab)\n\n\n\n\n\nThe Network tab, or web scraping the easy way\nThe network tab tracks all of the content loaded by a website. Many modern websites that use data will “fetch” the data from an external (possibly nonpublic) data source. The Network tab will show you these sources, potentially allowing you to get the data without writing any scraping code at all.\n\nThe places to look\n\nThe Fetch/XHR filter: all of the external XLM HTTP fetch requests, often used to load external data\nThe JS tab: Javascript files loaded by the site, which can sometimes include data\nIf you’re looking for GeoJSON data, you’ll want to look for .json files\n\n\n\nExample 1: The Prisons Census in Philadelphia\n\n\n\nExample 2: Measles data from the WSJ\n\n\n\nExample 3: Philly 311 Website\n\n\n\n\n\n\n\nTip\n\n\n\nWhen using the Network tab, you can right click on the listed entry in the left. Then, you can either select the “Open in new tab” option or the “Copy response” option. This will let you get the desired data into a new window or copied to your clipboard so you can save it to a file."
  },
  {
    "objectID": "analysis/6-lecture6A.html#web-scraping-demo-philadelphia-health-inspections",
    "href": "analysis/6-lecture6A.html#web-scraping-demo-philadelphia-health-inspections",
    "title": "Week 6AWeb Scraping",
    "section": "Web scraping demo: Philadelphia Health Inspections",
    "text": "Web scraping demo: Philadelphia Health Inspections\nLet’s scrape data for restaurant inspections using the searchable database maintained by the Philadelphia Inquirer, available at: https://data.inquirer.com/inspections/\n\n\nGetting the HTML content\nWe’ll use the built-in “requests” module to request the content of the website and load it into Python.\n\n\nCode\nimport requests\n\n\nUse a “get” request to get the content:\n\n\nCode\nurl = \"https://data.inquirer.com/inspections/\"\nr = requests.get(url)\n\n\n\n\nCode\ntype(r)\n\n\nrequests.models.Response\n\n\n\n\nCode\nr.status_code\n\n\n200\n\n\n\n\nBeautifulSoup makes this much more manageable\nBeautifulSoup makes it much easier to extract out different parts of a website.\n\n\nCode\nfrom bs4 import BeautifulSoup\n\n\nInitialize the “soup” object, using the content of our get request:\n\n\nCode\nsoup = BeautifulSoup(r.content, 'html.parser')\n\n\n\n\nMaking the HTML “pretty”\n\n\nCode\nprint(soup.prettify())\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n  &lt;meta charset=\"utf-8\"/&gt;\n  &lt;meta content=\"IE=edge,chrome=1\" http-equiv=\"X-UA-Compatible\"/&gt;\n  &lt;meta content=\"initial-scale=1.0, maximum-scale=1.0, user-scalable=1.0\" name=\"viewport\"/&gt;\n  &lt;title&gt;\n   Clean Plates | The Philadelphia Inquirer\n  &lt;/title&gt;\n  &lt;meta content=\"yes\" name=\"apple-mobile-web-app-capable\"/&gt;\n  &lt;meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\"/&gt;\n  &lt;meta content=\"Philadelphia Inquirer\" name=\"publication\" property=\"og:site_name\"&gt;\n   &lt;meta content=\"noindex\" name=\"robots\"&gt;\n    &lt;meta content=\"summary\" name=\"twitter:card\"/&gt;\n    &lt;meta content=\"@phillyinquirer\" name=\"twitter:site\"/&gt;\n    &lt;meta content=\"Clean Plates | The Philadelphia Inquirer\" name=\"title\"&gt;\n     &lt;meta content=\"Clean Plates | The Philadelphia Inquirer\" name=\"twitter:title\"/&gt;\n     &lt;meta content=\"Clean Plates | The Philadelphia Inquirer\" name=\"contenttitle\" property=\"og:title\"&gt;\n      &lt;meta content=\"Website\" name=\"contenttype\"&gt;\n       &lt;meta content=\"website\" property=\"og:type\"&gt;\n        &lt;meta content=\"https://data.inquirer.com/inspections/\" property=\"og:url\"/&gt;\n        &lt;meta content=\"https://data.inquirer.com/inspections/\" name=\"twitter:url\"/&gt;\n        &lt;meta content=\"https://data.inquirer.com/inspections/\" property=\"al:web:url\"&gt;\n         &lt;meta content=\"always\" name=\"referrer\"/&gt;\n         &lt;meta content=\"local\" name=\"cg\"&gt;\n          &lt;meta content=\"By Rob Kandel\" name=\"byline\"/&gt;\n          &lt;link href=\"//data.inquirer.com/open_data/inspections/media/images/home_icon.png\" rel=\"image_src\"/&gt;\n          &lt;meta content=\"//data.inquirer.com/open_data/inspections/media/images/home_icon.png\" name=\"photourl\" property=\"og:image\"/&gt;\n          &lt;meta content=\"//data.inquirer.com/open_data/inspections/media/images/home_icon.png\" name=\"twitter:image\"/&gt;\n          &lt;meta content=\"Clean Plates: Philadelphia Restaurant Inspections\" name=\"description\" property=\"og:description\"&gt;\n           &lt;meta content=\"Clean Plates: Philadelphia Restaurant Inspections\" name=\"twitter:description\"/&gt;\n           &lt;meta content=\"3x82DC93LZlv0I/hQEBoyVVjlGPtX7VxHFgv1upr+9I=\" name=\"verify-v1\"&gt;\n            &lt;meta content=\"M2AU5FiSubRkBuZol-Gdtsaa8tp0EASDie_y3N-fje4\" name=\"google-site-verification\"/&gt;\n            &lt;meta content=\"29f3cb6efb7e05d5\" name=\"y_key\"/&gt;\n            &lt;meta content=\"ccf0cd67e5f1e33c\" name=\"y_key\"/&gt;\n            &lt;meta content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" name=\"viewport\"/&gt;\n            &lt;meta content=\"yes\" name=\"apple-mobile-web-app-capable\"&gt;\n             &lt;link href=\"//media.inquirer.com/designimages/inq-favicon.png\" rel=\"icon\" type=\"image/png\"/&gt;\n             &lt;link href=\"//media.inquirer.com/designimages/inq-favicon.ico\" rel=\"icon\" type=\"image/vnd.microsoft.icon\"/&gt;\n             &lt;link href=\"//media.inquirer.com/designimages/inq-favicon.ico\" rel=\"shortcut icon\" type=\"image/vnd.microsoft.icon\"/&gt;\n             &lt;link href=\"//media.inquirer.com/designimages/apple-touch-inquirer-icon.png\" rel=\"apple-touch-icon\" type=\"image/png\"/&gt;\n             &lt;script&gt;\n              var siteURL = 'https://data.inquirer.com/inspections/';\n             &lt;/script&gt;\n             &lt;link href=\"//fonts.googleapis.com/css?family=Roboto:400,400italic,700,300\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n             &lt;link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\"/&gt;\n             &lt;link href=\"//media.inquirer.com/storage/inquirer/script/leaflet/leaflet.css\" rel=\"stylesheet\"&gt;\n              &lt;!--[if lt IE 9]&gt;\n        &lt;link rel=\"stylesheet\" href=\"//media.inquirer.com/storage/inquirer/script/leaflet/leaflet.ie.css\" /&gt;\n        &lt;link rel=\"stylesheet\" href=\"//media.inquirer.com/storage/inquirer/script/leaflet/MarkerCluster.Default.ie.css\" /&gt;\n    &lt;![endif]--&gt;\n              &lt;link href=\"//data.inquirer.com/open_data/inspections/media/css/jquery-ui-1.9.0.custom.min.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n              &lt;link href=\"//data.inquirer.com/open_data/inspections/media/css/inspections_global.min.4.0.0.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n              &lt;script src=\"//media.inquirer.com/storage/inquirer/script/owl/jquery-1.11.2.min.js\" type=\"text/javascript\"&gt;\n              &lt;/script&gt;\n              &lt;!--[if lt IE 9]&gt;\n        &lt;script type=\"text/javascript\" src=\"https://www.inquirer.com/includes/respond.js\"&gt;&lt;/script&gt;\n    &lt;![endif]--&gt;\n              &lt;script src=\"//data.inquirer.com/open_data/inspections/media/js/modernizr.js\" type=\"text/javascript\"&gt;\n              &lt;/script&gt;\n              &lt;script src=\"//media.inquirer.com/storage/inquirer/script/leaflet/leafletCluster.0.7.2.js\" type=\"text/javascript\"&gt;\n              &lt;/script&gt;\n              &lt;script src=\"//data.inquirer.com/open_data/inspections/media/js/jquery-ui-1.10.3.custom.min.js\" type=\"text/javascript\"&gt;\n              &lt;/script&gt;\n              &lt;link href=\"//media.inquirer.com/storage/inquirer/script/owl/owl.carousel.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n              &lt;script src=\"//media.inquirer.com/storage/inquirer/script/owl/owl.carousel.min.js\" type=\"text/javascript\"&gt;\n              &lt;/script&gt;\n              &lt;!-- &lt;script type=\"text/javascript\" src=\"//data.inquirer.com/open_data/inspections/media/js/restaurant_inspections.4.5.0.min.js\"&gt;&lt;/script&gt; --&gt;\n              &lt;script src=\"https://data.inquirer.com//open_data/inspections/media/js/restaurant_inspections.4.5.0.min.js\" type=\"text/javascript\"&gt;\n              &lt;/script&gt;\n             &lt;/link&gt;\n            &lt;/meta&gt;\n           &lt;/meta&gt;\n          &lt;/meta&gt;\n         &lt;/meta&gt;\n        &lt;/meta&gt;\n       &lt;/meta&gt;\n      &lt;/meta&gt;\n     &lt;/meta&gt;\n    &lt;/meta&gt;\n   &lt;/meta&gt;\n  &lt;/meta&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;div class=\"masterWrapper\"&gt;\n   &lt;div class=\"navigationWrapper\"&gt;\n    &lt;div class=\"navigationInner\"&gt;\n     &lt;div class=\"brandLogo transitionAll\"&gt;\n      &lt;a href=\"https://www.inquirer.com\" target=\"_blank\"&gt;\n       &lt;img src=\"//media.inquirer.com/designimages/InqTheInquirerSmall_140x30.png\"/&gt;\n      &lt;/a&gt;\n     &lt;/div&gt;\n     &lt;div class=\"siteTitle\"&gt;\n      &lt;a href=\"//www.inquirer.com/health/clean-plates/\"&gt;\n       &lt;div class=\"siteLogoText\"&gt;\n        &lt;span class=\"siteLogoTitle transitionAll\"&gt;\n         Clean Plates\n        &lt;/span&gt;\n       &lt;/div&gt;\n      &lt;/a&gt;\n     &lt;/div&gt;\n     &lt;div class=\"menuButton\"&gt;\n      &lt;div class=\"navIcon transitionAll\"&gt;\n       &lt;span&gt;\n       &lt;/span&gt;\n       &lt;span&gt;\n       &lt;/span&gt;\n       &lt;span&gt;\n       &lt;/span&gt;\n       &lt;span&gt;\n       &lt;/span&gt;\n      &lt;/div&gt;\n     &lt;/div&gt;\n     &lt;div class=\"searchWrapper transitionRight\"&gt;\n      &lt;div class=\"buttonItem transitionAll searchButton\" id=\"search_button_search\"&gt;\n       &lt;span class=\"searchButtonSymbol transitionAll\"&gt;\n        &lt;span class=\"transitionAll\"&gt;\n         &lt;i class=\"fa fa-search transitionAll\"&gt;\n         &lt;/i&gt;\n        &lt;/span&gt;\n       &lt;/span&gt;\n       &lt;span class=\"searchButtonText transitionAll\"&gt;\n        Search\n       &lt;/span&gt;\n      &lt;/div&gt;\n      &lt;div class=\"searchDropDownMenu transitionAll\" id=\"search_drop_down_menu\"&gt;\n       &lt;div class=\"searchDropDownMenuInner\"&gt;\n        &lt;div class=\"countySelector\"&gt;\n         &lt;label class=\"searchOptionLabel\"&gt;\n          County\n         &lt;/label&gt;\n         &lt;div class=\"searchOptionInput\"&gt;\n          &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"menu_dropdown_county\" name=\"county\"&gt;\n           &lt;option selected=\"\" value=\"philly\"&gt;\n            Philadelphia\n           &lt;/option&gt;\n           &lt;option value=\"bucks\"&gt;\n            Bucks\n           &lt;/option&gt;\n           &lt;option value=\"gloucester\"&gt;\n            Gloucester\n           &lt;/option&gt;\n           &lt;option value=\"montgomery\"&gt;\n            Montgomery\n           &lt;/option&gt;\n          &lt;/select&gt;\n         &lt;/div&gt;\n         &lt;div class=\"clearAll\"&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"searchOptionsWrapper searchOptionsWrapperActive\" id=\"search_options_philadelphia\"&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Name\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;input class=\"transitionAll searchInput\" id=\"search_input_nav_philadelphia\" value=\"Ex: Zahav\"/&gt;\n           &lt;span class=\"buttonItem transitionAll searchInputSubmit\" id=\"submit_philadelphia_facility\"&gt;\n            &lt;span&gt;\n             Search\n            &lt;/span&gt;\n           &lt;/span&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Neighborhood\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_philadelphia_neighborhood\" name=\"neighborhood\"&gt;\n            &lt;option value=\"-\"&gt;\n             —\n            &lt;/option&gt;\n            &lt;option value=\"Allegheny West\"&gt;\n             Allegheny West\n            &lt;/option&gt;\n            &lt;option value=\"Bella Vista/Southwark\"&gt;\n             Bella Vista/Southwark\n            &lt;/option&gt;\n            &lt;option value=\"Bridesburg\"&gt;\n             Bridesburg\n            &lt;/option&gt;\n            &lt;option value=\"Bustleton\"&gt;\n             Bustleton\n            &lt;/option&gt;\n            &lt;option value=\"Cedarbrook/Stenton\"&gt;\n             Cedarbrook/Stenton\n            &lt;/option&gt;\n            &lt;option value=\"Center City\"&gt;\n             Center City\n            &lt;/option&gt;\n            &lt;option value=\"Chestnut Hill\"&gt;\n             Chestnut Hill\n            &lt;/option&gt;\n            &lt;option value=\"East Falls\"&gt;\n             East Falls\n            &lt;/option&gt;\n            &lt;option value=\"East Germantown\"&gt;\n             East Germantown\n            &lt;/option&gt;\n            &lt;option value=\"East Mount Airy\"&gt;\n             East Mount Airy\n            &lt;/option&gt;\n            &lt;option value=\"Eastwick\"&gt;\n             Eastwick\n            &lt;/option&gt;\n            &lt;option value=\"Fairhill\"&gt;\n             Fairhill\n            &lt;/option&gt;\n            &lt;option value=\"Fairmount/Spring Garden\"&gt;\n             Fairmount/Spring Garden\n            &lt;/option&gt;\n            &lt;option value=\"Fox Chase/Burlholme\"&gt;\n             Fox Chase/Burlholme\n            &lt;/option&gt;\n            &lt;option value=\"Frankford\"&gt;\n             Frankford\n            &lt;/option&gt;\n            &lt;option value=\"Germantown\"&gt;\n             Germantown\n            &lt;/option&gt;\n            &lt;option value=\"Grays Ferry\"&gt;\n             Grays Ferry\n            &lt;/option&gt;\n            &lt;option value=\"Holmesburg\"&gt;\n             Holmesburg\n            &lt;/option&gt;\n            &lt;option value=\"Hunting Park\"&gt;\n             Hunting Park\n            &lt;/option&gt;\n            &lt;option value=\"Industrial\"&gt;\n             Industrial\n            &lt;/option&gt;\n            &lt;option value=\"Juniata Park/Feltonville\"&gt;\n             Juniata Park/Feltonville\n            &lt;/option&gt;\n            &lt;option value=\"Kensington\"&gt;\n             Kensington\n            &lt;/option&gt;\n            &lt;option value=\"Kingsessing\"&gt;\n             Kingsessing\n            &lt;/option&gt;\n            &lt;option value=\"Lawncrest\"&gt;\n             Lawncrest\n            &lt;/option&gt;\n            &lt;option value=\"Logan/Ogontz/Fern Rock\"&gt;\n             Logan/Ogontz/Fern Rock\n            &lt;/option&gt;\n            &lt;option value=\"Manayunk\"&gt;\n             Manayunk\n            &lt;/option&gt;\n            &lt;option value=\"Mantua\"&gt;\n             Mantua\n            &lt;/option&gt;\n            &lt;option value=\"Mayfair\"&gt;\n             Mayfair\n            &lt;/option&gt;\n            &lt;option value=\"North Philadelphia/East\"&gt;\n             North Philadelphia/East\n            &lt;/option&gt;\n            &lt;option value=\"North Philadelphia/West\"&gt;\n             North Philadelphia/West\n            &lt;/option&gt;\n            &lt;option value=\"Northeast Philadelphia\"&gt;\n             Northeast Philadelphia\n            &lt;/option&gt;\n            &lt;option value=\"Northern Liberties/Fishtown\"&gt;\n             Northern Liberties/Fishtown\n            &lt;/option&gt;\n            &lt;option value=\"Oak Lane/East Oak Lane\"&gt;\n             Oak Lane/East Oak Lane\n            &lt;/option&gt;\n            &lt;option value=\"Olney\"&gt;\n             Olney\n            &lt;/option&gt;\n            &lt;option value=\"Overbrook\"&gt;\n             Overbrook\n            &lt;/option&gt;\n            &lt;option value=\"Oxford Circle/Castor\"&gt;\n             Oxford Circle/Castor\n            &lt;/option&gt;\n            &lt;option value=\"Parkland\"&gt;\n             Parkland\n            &lt;/option&gt;\n            &lt;option value=\"Point Breeze\"&gt;\n             Point Breeze\n            &lt;/option&gt;\n            &lt;option value=\"Port Richmond\"&gt;\n             Port Richmond\n            &lt;/option&gt;\n            &lt;option value=\"Powelton\"&gt;\n             Powelton\n            &lt;/option&gt;\n            &lt;option value=\"Queen Village/Pennsport\"&gt;\n             Queen Village/Pennsport\n            &lt;/option&gt;\n            &lt;option value=\"Rhawnhurst\"&gt;\n             Rhawnhurst\n            &lt;/option&gt;\n            &lt;option value=\"Roxborough\"&gt;\n             Roxborough\n            &lt;/option&gt;\n            &lt;option value=\"Schuylkill/SW Center City\"&gt;\n             Schuylkill/SW Center City\n            &lt;/option&gt;\n            &lt;option value=\"Somerton\"&gt;\n             Somerton\n            &lt;/option&gt;\n            &lt;option value=\"South Philadelphia/East\"&gt;\n             South Philadelphia/East\n            &lt;/option&gt;\n            &lt;option value=\"South Philadelphia/West\"&gt;\n             South Philadelphia/West\n            &lt;/option&gt;\n            &lt;option value=\"Southwest Philadelphia\"&gt;\n             Southwest Philadelphia\n            &lt;/option&gt;\n            &lt;option value=\"Tacony/Wissinoming\"&gt;\n             Tacony/Wissinoming\n            &lt;/option&gt;\n            &lt;option value=\"Tioga/Nicetown\"&gt;\n             Tioga/Nicetown\n            &lt;/option&gt;\n            &lt;option value=\"Torresdale\"&gt;\n             Torresdale\n            &lt;/option&gt;\n            &lt;option value=\"University City\"&gt;\n             University City\n            &lt;/option&gt;\n            &lt;option value=\"West Mount Airy\"&gt;\n             West Mount Airy\n            &lt;/option&gt;\n            &lt;option value=\"West Oak Lane\"&gt;\n             West Oak Lane\n            &lt;/option&gt;\n            &lt;option value=\"West Philadelphia/Cobbs Creek\"&gt;\n             West Philadelphia/Cobbs Creek\n            &lt;/option&gt;\n            &lt;option value=\"West Philadelphia/Parkside\"&gt;\n             West Philadelphia/Parkside\n            &lt;/option&gt;\n            &lt;option value=\"Wynnefield\"&gt;\n             Wynnefield\n            &lt;/option&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Zip Code\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_philadelphia_zip\" name=\"zip\"&gt;\n            &lt;option value=\"-\"&gt;\n             —\n            &lt;/option&gt;\n            &lt;option value=\"19102\"&gt;\n             19102\n            &lt;/option&gt;\n            &lt;option value=\"19103\"&gt;\n             19103\n            &lt;/option&gt;\n            &lt;option value=\"19104\"&gt;\n             19104\n            &lt;/option&gt;\n            &lt;option value=\"19106\"&gt;\n             19106\n            &lt;/option&gt;\n            &lt;option value=\"19107\"&gt;\n             19107\n            &lt;/option&gt;\n            &lt;option value=\"19109\"&gt;\n             19109\n            &lt;/option&gt;\n            &lt;option value=\"19111\"&gt;\n             19111\n            &lt;/option&gt;\n            &lt;option value=\"19112\"&gt;\n             19112\n            &lt;/option&gt;\n            &lt;option value=\"19114\"&gt;\n             19114\n            &lt;/option&gt;\n            &lt;option value=\"19115\"&gt;\n             19115\n            &lt;/option&gt;\n            &lt;option value=\"19116\"&gt;\n             19116\n            &lt;/option&gt;\n            &lt;option value=\"19118\"&gt;\n             19118\n            &lt;/option&gt;\n            &lt;option value=\"19119\"&gt;\n             19119\n            &lt;/option&gt;\n            &lt;option value=\"19120\"&gt;\n             19120\n            &lt;/option&gt;\n            &lt;option value=\"19121\"&gt;\n             19121\n            &lt;/option&gt;\n            &lt;option value=\"19122\"&gt;\n             19122\n            &lt;/option&gt;\n            &lt;option value=\"19123\"&gt;\n             19123\n            &lt;/option&gt;\n            &lt;option value=\"19124\"&gt;\n             19124\n            &lt;/option&gt;\n            &lt;option value=\"19125\"&gt;\n             19125\n            &lt;/option&gt;\n            &lt;option value=\"19126\"&gt;\n             19126\n            &lt;/option&gt;\n            &lt;option value=\"19127\"&gt;\n             19127\n            &lt;/option&gt;\n            &lt;option value=\"19128\"&gt;\n             19128\n            &lt;/option&gt;\n            &lt;option value=\"19129\"&gt;\n             19129\n            &lt;/option&gt;\n            &lt;option value=\"19130\"&gt;\n             19130\n            &lt;/option&gt;\n            &lt;option value=\"19131\"&gt;\n             19131\n            &lt;/option&gt;\n            &lt;option value=\"19132\"&gt;\n             19132\n            &lt;/option&gt;\n            &lt;option value=\"19133\"&gt;\n             19133\n            &lt;/option&gt;\n            &lt;option value=\"19134\"&gt;\n             19134\n            &lt;/option&gt;\n            &lt;option value=\"19135\"&gt;\n             19135\n            &lt;/option&gt;\n            &lt;option value=\"19136\"&gt;\n             19136\n            &lt;/option&gt;\n            &lt;option value=\"19137\"&gt;\n             19137\n            &lt;/option&gt;\n            &lt;option value=\"19138\"&gt;\n             19138\n            &lt;/option&gt;\n            &lt;option value=\"19139\"&gt;\n             19139\n            &lt;/option&gt;\n            &lt;option value=\"19140\"&gt;\n             19140\n            &lt;/option&gt;\n            &lt;option value=\"19141\"&gt;\n             19141\n            &lt;/option&gt;\n            &lt;option value=\"19142\"&gt;\n             19142\n            &lt;/option&gt;\n            &lt;option value=\"19143\"&gt;\n             19143\n            &lt;/option&gt;\n            &lt;option value=\"19144\"&gt;\n             19144\n            &lt;/option&gt;\n            &lt;option value=\"19145\"&gt;\n             19145\n            &lt;/option&gt;\n            &lt;option value=\"19146\"&gt;\n             19146\n            &lt;/option&gt;\n            &lt;option value=\"19147\"&gt;\n             19147\n            &lt;/option&gt;\n            &lt;option value=\"19148\"&gt;\n             19148\n            &lt;/option&gt;\n            &lt;option value=\"19149\"&gt;\n             19149\n            &lt;/option&gt;\n            &lt;option value=\"19150\"&gt;\n             19150\n            &lt;/option&gt;\n            &lt;option value=\"19151\"&gt;\n             19151\n            &lt;/option&gt;\n            &lt;option value=\"19152\"&gt;\n             19152\n            &lt;/option&gt;\n            &lt;option value=\"19153\"&gt;\n             19153\n            &lt;/option&gt;\n            &lt;option value=\"19154\"&gt;\n             19154\n            &lt;/option&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"clearAll\"&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"searchOptionsWrapper\" id=\"search_options_bucks\"&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Name\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;input class=\"transitionAll searchInput\" id=\"search_input_nav_bucks\" value=\"Ex: Pineville Tavern\"/&gt;\n           &lt;span class=\"buttonItem transitionAll searchInputSubmit\" id=\"submit_bucks_facility\"&gt;\n            &lt;span&gt;\n             Search\n            &lt;/span&gt;\n           &lt;/span&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           City\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_bucks_neighborhood\" name=\"neighborhood\"&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Zip Code\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_bucks_zip\" name=\"zip\"&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"clearAll\"&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"searchOptionsWrapper\" id=\"search_options_gloucester\"&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Name\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;input class=\"transitionAll searchInput\" id=\"search_input_nav_gloucester\" value=\"Ex: La Verde\"/&gt;\n           &lt;span class=\"buttonItem transitionAll searchInputSubmit\" id=\"submit_gloucester_facility\"&gt;\n            &lt;span&gt;\n             Search\n            &lt;/span&gt;\n           &lt;/span&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           City\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_gloucester_neighborhood\" name=\"neighborhood\"&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Zip Code\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_gloucester_zip\" name=\"zip\"&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"clearAll\"&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"searchOptionsWrapper\" id=\"search_options_montgomery\"&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Name\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;input class=\"transitionAll searchInput\" id=\"search_input_nav_montgomery\" value=\"Ex: Merion Cricket Club\"/&gt;\n           &lt;span class=\"buttonItem transitionAll searchInputSubmit\" id=\"submit_montgomery_facility\"&gt;\n            &lt;span&gt;\n             Search\n            &lt;/span&gt;\n           &lt;/span&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           City\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_montgomery_neighborhood\" name=\"neighborhood\"&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"searchOptionRow\"&gt;\n          &lt;label class=\"searchOptionLabel\"&gt;\n           Zip Code\n          &lt;/label&gt;\n          &lt;div class=\"searchOptionInput\"&gt;\n           &lt;select class=\"buttonItem formButton formButtonCounty menuCounty transitionAll\" id=\"submit_montgomery_zip\" name=\"zip\"&gt;\n           &lt;/select&gt;\n          &lt;/div&gt;\n          &lt;div class=\"clearAll\"&gt;\n          &lt;/div&gt;\n         &lt;/div&gt;\n         &lt;div class=\"clearAll\"&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=\"socialWrapper\"&gt;\n       &lt;div class=\"transitionAll socialButton\"&gt;\n        &lt;a class=\"transitionAll\" href=\"https://data.inquirer.com/inspections/about/\"&gt;\n         &lt;i class=\"fa fa-info-circle fa-2\"&gt;\n         &lt;/i&gt;\n        &lt;/a&gt;\n       &lt;/div&gt;\n       &lt;div class=\"transitionAll socialButton\"&gt;\n        &lt;a class=\"transitionAll\" href=\"https://www.facebook.com/sharer/sharer.php?u=https://data.inquirer.com/inspections/\" target=\"_blank\"&gt;\n         &lt;i class=\"fa fa-facebook-square fa-2\"&gt;\n         &lt;/i&gt;\n        &lt;/a&gt;\n       &lt;/div&gt;\n       &lt;div class=\"transitionAll socialButton\"&gt;\n        &lt;a class=\"transitionAll\" href=\"https://twitter.com/intent/tweet?text=Clean Plates: Philadelphia restaurant inspections%0Ahttps://data.inquirer.com/inspections/&amp;hashtags=CleanPlates\" target=\"_blank\"&gt;\n         &lt;i class=\"fa fa-twitter fa-2\"&gt;\n         &lt;/i&gt;\n        &lt;/a&gt;\n       &lt;/div&gt;\n       &lt;div class=\"clearAll\"&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=\"brandLogoSmall\"&gt;\n       &lt;img src=\"//data.inquirer.com/open_data/inspections/media/images/InquirerflagSmallHeaderBlack.png\"/&gt;\n      &lt;/div&gt;\n      &lt;div class=\"clearAll\"&gt;\n      &lt;/div&gt;\n     &lt;/div&gt;\n     &lt;div class=\"clearAll\"&gt;\n     &lt;/div&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;div class=\"contentWrapper contentWrapperWhite transitionAll\"&gt;\n    &lt;div class=\"container\"&gt;\n     &lt;div class=\"headerImage transitionAll\"&gt;\n     &lt;/div&gt;\n     &lt;div class=\"searchHeaderWrapper transitionAll\"&gt;\n      &lt;div class=\"searchHeaderTitle transitionAll\"&gt;\n       Clean Plates\n                    : Philadelphia\n       &lt;span&gt;\n        Restaurant Inspections\n       &lt;/span&gt;\n      &lt;/div&gt;\n      &lt;div class=\"formWrapper transitionAll\"&gt;\n       &lt;div class=\"buttonItem formButton formButtonCounty transitionAll\" id=\"form_button_county\"&gt;\n       &lt;/div&gt;\n       &lt;div class=\"formInput transitionAll\"&gt;\n        &lt;span class=\"searchIcon\"&gt;\n         &lt;i class=\"fa fa-search\"&gt;\n         &lt;/i&gt;\n        &lt;/span&gt;\n        &lt;input class=\"transitionAll searchInput\" id=\"search_input\" value=\"Search by restaurant name\"/&gt;\n       &lt;/div&gt;\n       &lt;div class=\"buttonItem formButton formSubmit transitionAll\" id=\"form_button_submit\"&gt;\n        &lt;span class=\"transitionAll\"&gt;\n         Search\n        &lt;/span&gt;\n       &lt;/div&gt;\n       &lt;div class=\"clearAll\"&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n     &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"container containerMaxWidth\"&gt;\n     &lt;div class=\"container establishmentWrapper\"&gt;\n      &lt;div class=\"establishmentTitleWrapper\"&gt;\n       &lt;div class=\"establishmentButtonWrapper\"&gt;\n        &lt;div class=\"buttonItem transitionAll rotatorButton rotatorButtonPrev\" id=\"rotator_prev\"&gt;\n         &lt;i class=\"fa fa-chevron-left\"&gt;\n         &lt;/i&gt;\n        &lt;/div&gt;\n        &lt;div class=\"buttonItem transitionAll rotatorButton rotatorButtonNext\" id=\"rotator_next\"&gt;\n         &lt;i class=\"fa fa-chevron-right\"&gt;\n         &lt;/i&gt;\n        &lt;/div&gt;\n        &lt;div class=\"clearAll\"&gt;\n        &lt;/div&gt;\n       &lt;/div&gt;\n       &lt;div class=\"establishmentTitleText\"&gt;\n        Explore popular places and celebrity chefs in Philadelphia\n       &lt;/div&gt;\n       &lt;div class=\"clearAll\"&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=\"establishmentHolder\"&gt;\n       &lt;div class=\"establishmentInner transitionAll owl-carousel\" data-counter=\"0\" id=\"establishment_holder\"&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=reading_terminal\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/RTMinside.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=reading_terminal\"&gt;\n           Reading Terminal Market\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=stadiums\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/clean_plates_CBP.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=stadiums\"&gt;\n           Sports Stadiums\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=airport\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/PHLterminal.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=airport\"&gt;\n           Philadelphia Int'l Airport\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=hospitals\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/CHOP2.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=hospitals\"&gt;\n           Hospitals\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=schools\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/eisenhowerCAFE.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=schools\"&gt;\n           Schools\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=food_trucks\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/foodtruck.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=food_trucks\"&gt;\n           Food Trucks\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=jose_garces\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/GARCES.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=jose_garces\"&gt;\n           Jose Garces\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=stephen_starr\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/STARR.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=stephen_starr\"&gt;\n           Stephen Starr\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=marc_vetri\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/VETRI.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=marc_vetri\"&gt;\n           Marc Vetri\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=safran__turney\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/TURNEY.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=safran__turney\"&gt;\n           Safran &amp; Turney\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=michael_solomonov\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/SOLOMONOV.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=michael_solomonov\"&gt;\n           Michael Solomonov\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=audrey-claire_taichman\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/Taichman.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=audrey-claire_taichman\"&gt;\n           Audrey-Claire Taichman\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=bobby_flay\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/FLAY1.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=bobby_flay\"&gt;\n           Bobby Flay\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"rotatorUnit noSwipe\"&gt;\n         &lt;div class=\"rotatorImage\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=masaharu_morimoto\"&gt;\n           &lt;img src=\"//media.inquirer.com/images/300*281/MORIMOTO.jpg\"/&gt;\n          &lt;/a&gt;\n         &lt;/div&gt;\n         &lt;div class=\"rotatorTitle\"&gt;\n          &lt;a href=\"https://data.inquirer.com/inspections/philly/?searchType=chefs&amp;chef=masaharu_morimoto\"&gt;\n           Masaharu Morimoto\n          &lt;/a&gt;\n         &lt;/div&gt;\n        &lt;/div&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n     &lt;/div&gt;\n     &lt;div class=\"mostRecentWrapper\"&gt;\n      &lt;div class=\"containerTitle containerTitleIndex\"&gt;\n       &lt;span class=\"containerTitleText\"&gt;\n        Most Recent Inspections:\n       &lt;/span&gt;\n       &lt;a class=\"buttonItem recentButtonOption recentButtonOptionPhilly recentButtonOptionActive transitionAll\" data-value=\"philly\" href=\"https://data.inquirer.com/inspections/philly/\"&gt;\n        Philadelphia\n       &lt;/a&gt;\n       &lt;a class=\"buttonItem recentButtonOption recentButtonOptionBucks transitionAll\" data-value=\"bucks\" href=\"https://data.inquirer.com/inspections/bucks/\"&gt;\n        Bucks County\n       &lt;/a&gt;\n       &lt;a class=\"buttonItem recentButtonOption recentButtonOptionBucks transitionAll\" data-value=\"bucks\" href=\"https://data.inquirer.com/inspections/gloucester/\"&gt;\n        Gloucester County\n       &lt;/a&gt;\n       &lt;a class=\"buttonItem recentButtonOption recentButtonOptionMontgomery transitionAll\" data-value=\"montgomer\" href=\"https://data.inquirer.com/inspections/montgomery/\"&gt;\n        Montgomery County\n       &lt;/a&gt;\n       &lt;div class=\"clearAll\"&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=\"inspectionsHolder\"&gt;\n       &lt;div class=\"inspectionRecentHolder inspectionRecentHolderActive\" id=\"recent_holder_philly\"&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_0\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             E. Corner Inc.\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1360 S 51ST ST 19143\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              8\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_1\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Benna%27s%20Cafe|1236%20S%208TH%20ST%2019147\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Benna's Cafe\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1236 S 8TH ST 19147\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              5\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_2\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Dunkin%20Donuts|1551%20WASHINGTON%20AVE%2019146\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Dunkin Donuts\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1551 WASHINGTON AVE 19146\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              7\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_3\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Javies|4901%20UMBRIA%20ST%2019128\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Javies\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4901 UMBRIA ST 19128\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              5\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_4\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Austin%20Meehan%20Middle%20School|3001%20RYAN%20AVE%2019152\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Austin Meehan Middle School\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3001 RYAN AVE 19152\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              5\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_5\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Bangin%20Grub|3401%20I%20ST%2019134\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Bangin Grub\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3401 I ST 19134\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_6\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=CADI|444%20N%2003RD%20ST%20FL%204%2019123\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             CADI\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             444 N 03RD ST FL 4 19123\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_7\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Community%20Partnership%20School|3033%20W%20GLENWOOD%20AVE%2019121\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Community Partnership School\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3033 W GLENWOOD AVE 19121\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_8\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Conoco|7554%20CITY%20AVE%2019151\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Conoco\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             7554 CITY AVE 19151\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_9\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Dollar%20General|9212%20FRANKFORD%20AVE%2019114\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Dollar General\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             9212 FRANKFORD AVE 19114\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              6\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_10\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Fifth%204938%20%28Signage%3A%205th%20St.%20Live%20Poultry%29|4938%20N%205TH%20ST%2019120\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Fifth 4938 (Signage: 5th St. Live Poultry)\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4938 N 5TH ST 19120\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              6\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_11\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Fork|306%20MARKET%20ST%2019106\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Fork\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             306 MARKET ST 19106\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              7\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_12\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Franchesca%20Mini%20Market|3071%20C%20ST%2019134\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Franchesca Mini Market\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3071 C ST 19134\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              9\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_13\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Fuj%20News|31%20E%20OREGON%20AVE%2019148\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Fuj News\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             31 E OREGON AVE 19148\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_14\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Jefferson%20Pharmacy%20-%20Walnut%20Street|908%20WALNUT%20ST%2019107\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Jefferson Pharmacy - Walnut Street\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 6, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             908 WALNUT ST 19107\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_15\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Aladdin%20Market|6247%20ELMWOOD%20AVE%2019142\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Aladdin Market\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             6247 ELMWOOD AVE 19142\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              9\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              15\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_16\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=El%20Mictlan|2053%20S%20BEECHWOOD%20ST%2019145\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             El Mictlan\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             2053 S BEECHWOOD ST 19145\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              7\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              14\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_17\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=3737%20Restaurant%20and%20Loung|3737%20N%202ND%20ST%2019140\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             3737 Restaurant and Loung\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3737 N 2ND ST 19140\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              8\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_18\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=DC%20Donut%20Plus|630%20W%20GIRARD%20AVE%2019123\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             DC Donut Plus\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             630 W GIRARD AVE 19123\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              12\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_19\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Frankford%20High%20School|4900%20OXFORD%20AVE%2019124\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Frankford High School\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4900 OXFORD AVE 19124\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              10\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_20\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Galdo%20Catering%20%26%20Entertainment|1933%20W%20MOYAMENSING%20AVE%2019145\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Galdo Catering &amp; Entertainment\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1933 W MOYAMENSING AVE 19145\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              10\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_21\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Irwin%27s|1901%20S%209TH%20ST%2019148\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Irwin's\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1901 S 9TH ST 19148\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              5\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_22\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Andrew%20Hamilton%20School|5640%20SPRUCE%20ST%2019139\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Andrew Hamilton School\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             5640 SPRUCE ST 19139\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_23\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Blankenburg%20School|4600%20W%20GIRARD%20AVE%2019104\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Blankenburg School\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4600 W GIRARD AVE 19104\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_24\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Celina%20Convenience%20Store%20Inc|7930%20FRANKFORD%20AVE%2019136\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Celina Convenience Store Inc\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             7930 FRANKFORD AVE 19136\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              18\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_25\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Ella%27s%20Pizza%2C%20Grill%20and%20Seafood|2200%20E%20LEHIGH%20AVE%2019125\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Ella's Pizza, Grill and Seafood\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             2200 E LEHIGH AVE 19125\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              11\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_26\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Frankford%20High%20School%20Culinary%20Arts%20%20325|4900%20OXFORD%20AVE%2019124\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Frankford High School Culinary Arts  325\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4900 OXFORD AVE 19124\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_27\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=A%20PLUS%20%2340143H|2201%20WALNUT%20ST%2019103\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             A PLUS #40143H\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             2201 WALNUT ST 19103\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_28\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Artisan%20Boulanger%20Patissier|1218%20MIFFLIN%20ST%2019148\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Artisan Boulanger Patissier\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1218 MIFFLIN ST 19148\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              9\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_29\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Cinemark%20USA%2C%20Inc%20%28Concessions%29|4012%20WALNUT%20ST%2019104\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Cinemark USA, Inc (Concessions)\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4012 WALNUT ST 19104\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              7\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_30\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Elvis%20Food%20Market|5931%20W%20GIRARD%20AVE%2019151\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Elvis Food Market\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             5931 W GIRARD AVE 19151\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              5\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_31\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Aeden%20Food%20Market|3088%20FRANKFORD%20AVE%2019134\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Aeden Food Market\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3088 FRANKFORD AVE 19134\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              11\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_32\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Apex%20Pharmacy|7200%20FRANKFORD%20AVE%2019136\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Apex Pharmacy\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             7200 FRANKFORD AVE 19136\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_33\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Aramark%20At%20Temple%20U%20-%20Morgan%20Retail%20Food%20Court%20Street%20Level|1601%20N%20BROAD%20ST%2019122\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Aramark At Temple U - Morgan Retail Food Court Street Level\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1601 N BROAD ST 19122\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_34\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Blankenburg%20Head%20Start|4600%20W%20GIRARD%20AVE%2019131\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Blankenburg Head Start\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4600 W GIRARD AVE 19131\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              2\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_35\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Bridesburg%20Annex|4415%20ALMOND%20ST%2019137\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Bridesburg Annex\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4415 ALMOND ST 19137\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_36\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Brothers%20Market|1103%20COTTMAN%20AVE%2019111\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Brothers Market\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1103 COTTMAN AVE 19111\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              6\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_37\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Chucks%20Helados%20Water%20Ice%20Inc|1835%20SNYDER%20AVE%2019145\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Chucks Helados Water Ice Inc\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1835 SNYDER AVE 19145\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_38\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=CVS%20Store%20%232170|3331%20GRANT%20AVE%2019114\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             CVS Store #2170\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3331 GRANT AVE 19114\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              5\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_39\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Dollar%20General|2120%20S%2023RD%20ST%2019145\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Dollar General\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             2120 S 23RD ST 19145\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              6\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_40\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Down%20Home%20Diner|45%20N%2012TH%20ST%20SPC%20B2%2019107\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Down Home Diner\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             45 N 12TH ST SPC B2 19107\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              9\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_41\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Dutch%20Eating%20Place|45%20N%2012TH%20ST%20SPC%20B11%2019107\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Dutch Eating Place\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             45 N 12TH ST SPC B11 19107\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              6\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_42\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Fan%27s%20Cafe%20Indonesian%20Food|1835%20SNYDER%20AVE%2019145\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Fan's Cafe Indonesian Food\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1835 SNYDER AVE 19145\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              3\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_43\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Farina%20Di%20Vita|250%20CATHARINE%20ST%2019147\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Farina Di Vita\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             250 CATHARINE ST 19147\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              8\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_44\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Fishadelphia|3401%20I%20ST%20STE%20200%2019134\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Fishadelphia\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             3401 I ST STE 200 19134\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_45\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Fitzwater%20Cafe|728%20S%207TH%20ST%2019147\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Fitzwater Cafe\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             728 S 7TH ST 19147\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_46\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Franky%20Bradley%27s%20Lounge|1322%20CHANCELLOR%20ST%2019107\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Franky Bradley's Lounge\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1322 CHANCELLOR ST 19107\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_47\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=George%20Washington%20Carver%20H.%20S.%20of%20Engineering%20and%20Science|1600%20W%20NORRIS%20ST%2019121\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             George Washington Carver H. S. of Engineering and Science\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             1600 W NORRIS ST 19121\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              4\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_48\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=Hatville%20Deli|45%20N%2012TH%20ST%20SPC%20A9%2019107\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             Hatville Deli\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             45 N 12TH ST SPC A9 19107\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              6\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"inspectionUnit inspectionUnitOdd transitionBackground\" id=\"inspection_unit_49\"&gt;\n         &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=James%20Rhoads%20School|4923%20PARRISH%20ST%2019139\"&gt;\n          &lt;div class=\"inspectionUnitInner\"&gt;\n           &lt;div class=\"inspectionNameWrapper\"&gt;\n            &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n             James Rhoads School\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitDate\"&gt;\n             &lt;span class=\"inspectionUnitDateTitle\"&gt;\n              Inspection date:\n             &lt;/span&gt;\n             Oct 5, 2023\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n            &lt;div class=\"inspectionUnitAddress\"&gt;\n             4923 PARRISH ST 19139\n            &lt;/div&gt;\n            &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n            &lt;span class=\"inspectionCountLabel\"&gt;\n             Violations\n            &lt;/span&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountZero inspectionUnitCountFirst\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              0\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Foodborne Illness Risk Factors\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n             &lt;span class=\"inspectionCountNumber\"&gt;\n              1\n             &lt;/span&gt;\n             &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n              &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n               Lack of Good Retail Practices\n              &lt;/span&gt;\n             &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;div class=\"clearAll\"&gt;\n            &lt;/div&gt;\n           &lt;/div&gt;\n           &lt;div class=\"clearAll\"&gt;\n           &lt;/div&gt;\n          &lt;/div&gt;\n         &lt;/a&gt;\n        &lt;/div&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n     &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"sitePreloader\" id=\"site_preloader\"&gt;\n     &lt;div class=\"spinnerWrapper\"&gt;\n      &lt;img src=\"//data.inquirer.com/open_data/inspections/media/images/preloader.gif\"/&gt;\n     &lt;/div&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;script type=\"text/javascript\"&gt;\n    jQuery(document).ready(function() {\n            restaurant_inspections.index.init(\"philly\");\n        });\n   &lt;/script&gt;\n   &lt;div class=\"footerWrapper\"&gt;\n    &lt;div class=\"footerInner\"&gt;\n     &lt;div class=\"footerText\" id=\"footer_text\"&gt;\n      © 2023 Philadelphia Media Network |\n      &lt;a href=\"/about.html\"&gt;\n       About\n      &lt;/a&gt;\n     &lt;/div&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;script type=\"text/javascript\"&gt;\n    (function() { try { var scriptEl = document.createElement('script'); scriptEl.type = 'text/javascript'; scriptEl.async = 'async';\n        scriptEl.src = ('https:' == location.protocol) ? 'https://scdn.cxense.com/cx.js' : 'http://cdn.cxense.com/cx.js';\n        var targetEl = document.getElementsByTagName('script')[0]; targetEl.parentNode.insertBefore(scriptEl, targetEl); } catch (e) {};} ());\n   &lt;/script&gt;\n   &lt;script type=\"text/javascript\"&gt;\n    var googletag = googletag || {};\ngoogletag.cmd = googletag.cmd || [];\n(function() {\nvar gads = document.createElement('script');\ngads.async = true;\ngads.type = 'text/javascript';\nvar useSSL = 'https:' == document.location.protocol;\ngads.src = (useSSL ? 'https:' : 'http:') + \n'//www.googletagservices.com/tag/js/gpt.js';\nvar node = document.getElementsByTagName('script')[0];\nnode.parentNode.insertBefore(gads, node);\n})();\n   &lt;/script&gt;\n   &lt;script&gt;\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-54906410-1', 'auto');\n  ga('send', 'pageview');\n   &lt;/script&gt;\n   &lt;script type=\"text/javascript\"&gt;\n    var cX = cX || {}; cX.callQueue = cX.callQueue || [];\ncX.callQueue.push(['invoke', function() { \n\ngoogletag.cmd.push(function() {\n\nvar iuWidth = jQuery(\".inspectionUnit\").width();\nadSize = 0;\n\nif (iuWidth &gt;= 970){\n    adSize = '[[970,90]]';\n    \n    googletag.defineSlot('/4495/ph.health/clean-plates', [[970,90],[728, 90]], 'div-gpt-ad-1421441558710-0').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[970,90],[728, 90]], 'div-gpt-ad-1421441558710-1').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[970,90],[728, 90]], 'div-gpt-ad-1421441558710-2').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[970,90],[728, 90]], 'div-gpt-ad-1421441558710-3').addService(googletag.pubads());\n\n\n}\nif (iuWidth &lt; 970 && iuWidth &gt;= 728){\n    adSize = '[[728, 90]]';\n    \n    googletag.defineSlot('/4495/ph.health/clean-plates', [[728, 90]], 'div-gpt-ad-1421441558710-0').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[728, 90]], 'div-gpt-ad-1421441558710-1').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[728, 90]], 'div-gpt-ad-1421441558710-2').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[728, 90]], 'div-gpt-ad-1421441558710-3').addService(googletag.pubads());\n\n}\nif (iuWidth &lt; 728 ){\n    adSize = '[[320, 50]]';\n\n    googletag.defineSlot('/4495/ph.health/clean-plates', [[320, 50]], 'div-gpt-ad-1421441558710-0').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[320, 50]], 'div-gpt-ad-1421441558710-1').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[320, 50]], 'div-gpt-ad-1421441558710-2').addService(googletag.pubads());\ngoogletag.defineSlot('/4495/ph.health/clean-plates', [[320, 50]], 'div-gpt-ad-1421441558710-3').addService(googletag.pubads());\n\n}\n    googletag.pubads().setTargeting(\"CXSegments\", cX.getUserSegmentIds({persistedQueryId:'526a04ba1c3dbfdee82d93feaa7777b901666b09'}));  \n\ngoogletag.pubads().enableSingleRequest();\ngoogletag.enableServices();\n\n});\n}]);\n   &lt;/script&gt;\n   &lt;script&gt;\n    var iuLen = jQuery(\".inspectionUnit\").length;\nvar adCount = 0;\nfor (xx=0;xx&lt;iuLen;xx++){\n    if (xx == 0||xx == 5||xx == 10||xx == 15){\nvar gDiv = '';\ngDiv += \"&lt;div id='adDiv'&gt;&lt;div id='div-gpt-ad-1421441558710-\"+adCount+\"'&gt;\";\ngDiv += \"&lt;script type='text/javascript'&gt;\";\ngDiv += \"cX.callQueue.push(['invoke', function() {googletag.cmd.push(function() { googletag.display('div-gpt-ad-1421441558710-\"+adCount+\"'); });}]);\";\n\n// gDiv += \"googletag.cmd.push(function() { googletag.display('div-gpt-ad-1421441558710-\"+adCount+\"'); });\";\ngDiv += \"&lt;\\/script&gt;\";\ngDiv += \"&lt;\\/div&gt;&lt;\\/div&gt;\";\njQuery(gDiv).insertAfter(\".inspectionUnit:eq(\"+xx+\")\");\nadCount++;\n}\n\n}\n   &lt;/script&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n\n\n\nThis is what you’ll see if you use the Web Inspector\n\n\nHow to extract the content we want?\nTwo important functions\n\nsoup.select_one(selector): finds the first element matching the selector query and returns one element\nsoup.select(selector): finds all elements matching the selector\n\nRecommended reading: Note on beautiful soup and css selectors in this week’s repository\n\n\nTo the Web Inspector!\nWe can use the web inspector to understand the structure of the website and identify the HTML tags that we want to extract content from.\n\n\nLet’s select the first row\nWeb browsers will let us copy the CSS selector for individual elements.\nUse: Right Click &gt; Copy &gt; Copy Selector\n\n\nCode\nselector = \"#inspection_unit_0\"\n\n\n\n\nCode\n# Select the first row\n# NOTE: we are using \"select_one()\" to select only one matching element\nfirst_row = soup.select_one(selector)\n\n\n\n\nCode\nfirst_row\n\n\n&lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_0\"&gt;&lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143\"&gt;&lt;div class=\"inspectionUnitInner\"&gt;&lt;div class=\"inspectionNameWrapper\"&gt;&lt;div class=\"inspectionUnitName transitionAll\"&gt;E. Corner Inc.&lt;/div&gt;&lt;div class=\"inspectionUnitDate\"&gt;&lt;span class=\"inspectionUnitDateTitle\"&gt;Inspection date:&lt;/span&gt; Oct 6, 2023&lt;/div&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"inspectionUnitInfoWrapper\"&gt;&lt;div class=\"inspectionUnitAddress\"&gt;1360 S 51ST ST 19143&lt;/div&gt;&lt;div class=\"inspectionUnitNeigborhood\"&gt;&lt;/div&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"inspectionUnitCountWrapper\"&gt;&lt;span class=\"inspectionCountLabel\"&gt;Violations&lt;/span&gt;&lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;&lt;span class=\"inspectionCountNumber\"&gt;2&lt;/span&gt;&lt;span class=\"inspectionUnitInfoItemTitle\"&gt;&lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;Foodborne Illness Risk Factors&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;&lt;span class=\"inspectionCountNumber\"&gt;8&lt;/span&gt;&lt;span class=\"inspectionUnitInfoItemTitle\"&gt;&lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;Lack of Good Retail Practices&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;\n\n\n\n\nBut we need all of the rows!\n\n\n\n\n\n\nImportant\n\n\n\nWhen you use Copy -&gt; Copy Selector, the copied css selector will only match the specific element you’ve highlighted, no others!\n\n\n\nGeneralizing your selectors\nWe need to generalize the selector to just select all rows from the table, not just the first one. To do this, we’ll need to go back to the web inspector and understand the structure of the website.\n\n\n\n\n\n\nTip\n\n\n\nWhen trying to identify a general selector, try to look for common patterns, like shared class names or id strings, across the tags you want to extract.\n\n\nIn our case, it looks like the “inspectionUnit” class is shared across all of the row div elements\n\n\n\nCode\n# Get all tags with the inspectionUnit class name\n# Note we are using select() to select ALL elements\nrows = soup.select('.inspectionUnit')\n\n\n\n\nCode\nlen(rows)\n\n\n50\n\n\n\n\nCode\n# get the first row\nrow = rows[0]\n\nprint(row.prettify())\n\n\n&lt;div class=\"inspectionUnit inspectionUnitEven transitionBackground\" id=\"inspection_unit_0\"&gt;\n &lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143\"&gt;\n  &lt;div class=\"inspectionUnitInner\"&gt;\n   &lt;div class=\"inspectionNameWrapper\"&gt;\n    &lt;div class=\"inspectionUnitName transitionAll\"&gt;\n     E. Corner Inc.\n    &lt;/div&gt;\n    &lt;div class=\"inspectionUnitDate\"&gt;\n     &lt;span class=\"inspectionUnitDateTitle\"&gt;\n      Inspection date:\n     &lt;/span&gt;\n     Oct 6, 2023\n    &lt;/div&gt;\n    &lt;div class=\"clearAll\"&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;div class=\"inspectionUnitInfoWrapper\"&gt;\n    &lt;div class=\"inspectionUnitAddress\"&gt;\n     1360 S 51ST ST 19143\n    &lt;/div&gt;\n    &lt;div class=\"inspectionUnitNeigborhood\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"clearAll\"&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;div class=\"inspectionUnitCountWrapper\"&gt;\n    &lt;span class=\"inspectionCountLabel\"&gt;\n     Violations\n    &lt;/span&gt;\n    &lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;\n     &lt;span class=\"inspectionCountNumber\"&gt;\n      2\n     &lt;/span&gt;\n     &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n      &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n       Foodborne Illness Risk Factors\n      &lt;/span&gt;\n     &lt;/span&gt;\n    &lt;/li&gt;\n    &lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;\n     &lt;span class=\"inspectionCountNumber\"&gt;\n      8\n     &lt;/span&gt;\n     &lt;span class=\"inspectionUnitInfoItemTitle\"&gt;\n      &lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;\n       Lack of Good Retail Practices\n      &lt;/span&gt;\n     &lt;/span&gt;\n    &lt;/li&gt;\n    &lt;div class=\"clearAll\"&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;div class=\"clearAll\"&gt;\n   &lt;/div&gt;\n  &lt;/div&gt;\n &lt;/a&gt;\n&lt;/div&gt;\n\n\n\n\n\n\nNow, let’s extract out the content from each row\nWe’ll look for the following items:\n\nThe link to the full inspection report\nThe name of the restaurant\nThe restaurant address\nThe number of food-borne violations\n\n\n1. The report link\nThe link is stored as the “href” attribute of the first “a” element:\n\n\nCode\na = row.select_one(\"a\")\n\na\n\n\n&lt;a href=\"https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143\"&gt;&lt;div class=\"inspectionUnitInner\"&gt;&lt;div class=\"inspectionNameWrapper\"&gt;&lt;div class=\"inspectionUnitName transitionAll\"&gt;E. Corner Inc.&lt;/div&gt;&lt;div class=\"inspectionUnitDate\"&gt;&lt;span class=\"inspectionUnitDateTitle\"&gt;Inspection date:&lt;/span&gt; Oct 6, 2023&lt;/div&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"inspectionUnitInfoWrapper\"&gt;&lt;div class=\"inspectionUnitAddress\"&gt;1360 S 51ST ST 19143&lt;/div&gt;&lt;div class=\"inspectionUnitNeigborhood\"&gt;&lt;/div&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"inspectionUnitCountWrapper\"&gt;&lt;span class=\"inspectionCountLabel\"&gt;Violations&lt;/span&gt;&lt;li class=\"inspectionUnitCount inspectionUnitCountFoodborne inspectionUnitCountFirst\"&gt;&lt;span class=\"inspectionCountNumber\"&gt;2&lt;/span&gt;&lt;span class=\"inspectionUnitInfoItemTitle\"&gt;&lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;Foodborne Illness Risk Factors&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"inspectionUnitCount inspectionUnitCountRetail\"&gt;&lt;span class=\"inspectionCountNumber\"&gt;8&lt;/span&gt;&lt;span class=\"inspectionUnitInfoItemTitle\"&gt;&lt;span class=\"inspectionUnitInfoItemTitleLabel\"&gt;Lack of Good Retail Practices&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\"clearAll\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;\n\n\nAttributes can be extracted from the “attrs” attribute\n\n\nCode\na.attrs\n\n\n{'href': 'https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143'}\n\n\n\n\nCode\nlink = a.attrs['href']\n\nlink\n\n\n'https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143'\n\n\n\n\n2. The restaurant name\nUse the “inspectionUnitName” class name to identify the right element.\n\n\n\nCode\n# Use the . to specify class name\nname_tag = row.select_one(\".inspectionUnitName\")\n\nname_tag\n\n\n&lt;div class=\"inspectionUnitName transitionAll\"&gt;E. Corner Inc.&lt;/div&gt;\n\n\n\n\nCode\nname = name_tag.text\n\nname\n\n\n'E. Corner Inc.'\n\n\n\n\n3. The restaurant address\nUse the “inspectionUnitAddress” class name to identify the right element.\n\n\n\nCode\n# Use the . to specify class name\naddr_tag = row.select_one(\".inspectionUnitAddress\")\n\naddr_tag\n\n\n&lt;div class=\"inspectionUnitAddress\"&gt;1360 S 51ST ST 19143&lt;/div&gt;\n\n\n\n\nCode\naddress = addr_tag.text\n\naddress\n\n\n'1360 S 51ST ST 19143'\n\n\n\n\n4. The number of food-borne violations\nIt looks like the count number is within an element with class “inspectionCountNumber”. BUT: this class is repeated on the retail violations element as well as the food-borne violations element. So, we’ll need to use nested selectors\nFirst, select elements with the “inspectionUnitCountFoodborne” class name and then the “inspectionCountNumber” class name.\n\n\n\nCode\n# The number of foodborne violations\ncount = row.select_one(\".inspectionUnitCountFoodborne .inspectionCountNumber\")\n\nint(count.text)\n\n\n2\n\n\n\n\n\n\n\n\nCaution\n\n\n\nIf the violations count is zero, there won’t be any element that matches the above selector (the website instead uses a “inspectionUnitCountZero” class.\nIf the element doesn’t exist, the select_one() function will return “None”\n\n\n\n\n\nPutting it all together\nNow, we can put this code into a for loop and extract out the content from every row on the page:\n\n\nCode\n# Store the data from each row\ndata = []\n\n# Step 1: Get all rows\nrows = soup.select(\".inspectionUnit\")\n\n# Loop over all rows\nfor this_row in rows:\n    \n    # Step 2: Get the report link\n    # Note: we are using the \"this_row\" variable from the for loop\n    a = this_row.select_one(\"a\")\n    url = a.attrs[\"href\"]\n\n    # Step 3: Get the name\n    name_tag = this_row.select_one(\".inspectionUnitName\")\n    name = name_tag.text\n\n    # Step 4: Get the name\n    addr_tag = this_row.select_one(\".inspectionUnitAddress\")\n    address = addr_tag.text\n\n    # Step 5: Get the violation count\n    count_tag = this_row.select_one(\".inspectionUnitCountFoodborne .inspectionCountNumber\")\n\n    # If there were no matches (None was returned), it means the count was zero\n    if count_tag is None:\n        count = 0\n    else:\n        count = int(count_tag.text)\n\n    # Step 6: Save it\n    data.append(\n        {\n            \"name\": name,\n            \"address\": address,\n            \"foodborne_count\": count,\n            \"url\": url,\n        }\n    )\n\n\n\n\n\nCode\ndata\n\n\n[{'name': 'E. Corner Inc.',\n  'address': '1360 S 51ST ST 19143',\n  'foodborne_count': 2,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=E.%20Corner%20Inc.|1360%20S%2051ST%20ST%2019143'},\n {'name': \"Benna's Cafe\",\n  'address': '1236 S 8TH ST 19147',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Benna%27s%20Cafe|1236%20S%208TH%20ST%2019147'},\n {'name': 'Dunkin Donuts',\n  'address': '1551 WASHINGTON AVE 19146',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Dunkin%20Donuts|1551%20WASHINGTON%20AVE%2019146'},\n {'name': 'Javies',\n  'address': '4901 UMBRIA ST 19128',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Javies|4901%20UMBRIA%20ST%2019128'},\n {'name': 'Austin Meehan Middle School',\n  'address': '3001 RYAN AVE 19152',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Austin%20Meehan%20Middle%20School|3001%20RYAN%20AVE%2019152'},\n {'name': 'Bangin Grub',\n  'address': '3401 I ST 19134',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Bangin%20Grub|3401%20I%20ST%2019134'},\n {'name': 'CADI',\n  'address': '444 N 03RD ST FL 4 19123',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=CADI|444%20N%2003RD%20ST%20FL%204%2019123'},\n {'name': 'Community Partnership School',\n  'address': '3033 W GLENWOOD AVE 19121',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Community%20Partnership%20School|3033%20W%20GLENWOOD%20AVE%2019121'},\n {'name': 'Conoco',\n  'address': '7554 CITY AVE 19151',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Conoco|7554%20CITY%20AVE%2019151'},\n {'name': 'Dollar General',\n  'address': '9212 FRANKFORD AVE 19114',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Dollar%20General|9212%20FRANKFORD%20AVE%2019114'},\n {'name': 'Fifth 4938 (Signage: 5th St. Live Poultry)',\n  'address': '4938 N 5TH ST 19120',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Fifth%204938%20%28Signage%3A%205th%20St.%20Live%20Poultry%29|4938%20N%205TH%20ST%2019120'},\n {'name': 'Fork',\n  'address': '306 MARKET ST 19106',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Fork|306%20MARKET%20ST%2019106'},\n {'name': 'Franchesca Mini Market',\n  'address': '3071 C ST 19134',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Franchesca%20Mini%20Market|3071%20C%20ST%2019134'},\n {'name': 'Fuj News',\n  'address': '31 E OREGON AVE 19148',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Fuj%20News|31%20E%20OREGON%20AVE%2019148'},\n {'name': 'Jefferson Pharmacy - Walnut Street',\n  'address': '908 WALNUT ST 19107',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Jefferson%20Pharmacy%20-%20Walnut%20Street|908%20WALNUT%20ST%2019107'},\n {'name': 'Aladdin Market',\n  'address': '6247 ELMWOOD AVE 19142',\n  'foodborne_count': 9,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Aladdin%20Market|6247%20ELMWOOD%20AVE%2019142'},\n {'name': 'El Mictlan',\n  'address': '2053 S BEECHWOOD ST 19145',\n  'foodborne_count': 7,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=El%20Mictlan|2053%20S%20BEECHWOOD%20ST%2019145'},\n {'name': '3737 Restaurant and Loung',\n  'address': '3737 N 2ND ST 19140',\n  'foodborne_count': 4,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=3737%20Restaurant%20and%20Loung|3737%20N%202ND%20ST%2019140'},\n {'name': 'DC Donut Plus',\n  'address': '630 W GIRARD AVE 19123',\n  'foodborne_count': 4,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=DC%20Donut%20Plus|630%20W%20GIRARD%20AVE%2019123'},\n {'name': 'Frankford High School',\n  'address': '4900 OXFORD AVE 19124',\n  'foodborne_count': 3,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Frankford%20High%20School|4900%20OXFORD%20AVE%2019124'},\n {'name': 'Galdo Catering & Entertainment',\n  'address': '1933 W MOYAMENSING AVE 19145',\n  'foodborne_count': 3,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Galdo%20Catering%20%26%20Entertainment|1933%20W%20MOYAMENSING%20AVE%2019145'},\n {'name': \"Irwin's\",\n  'address': '1901 S 9TH ST 19148',\n  'foodborne_count': 3,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Irwin%27s|1901%20S%209TH%20ST%2019148'},\n {'name': 'Andrew Hamilton School',\n  'address': '5640 SPRUCE ST 19139',\n  'foodborne_count': 2,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Andrew%20Hamilton%20School|5640%20SPRUCE%20ST%2019139'},\n {'name': 'Blankenburg School',\n  'address': '4600 W GIRARD AVE 19104',\n  'foodborne_count': 2,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Blankenburg%20School|4600%20W%20GIRARD%20AVE%2019104'},\n {'name': 'Celina Convenience Store Inc',\n  'address': '7930 FRANKFORD AVE 19136',\n  'foodborne_count': 2,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Celina%20Convenience%20Store%20Inc|7930%20FRANKFORD%20AVE%2019136'},\n {'name': \"Ella's Pizza, Grill and Seafood\",\n  'address': '2200 E LEHIGH AVE 19125',\n  'foodborne_count': 2,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Ella%27s%20Pizza%2C%20Grill%20and%20Seafood|2200%20E%20LEHIGH%20AVE%2019125'},\n {'name': 'Frankford High School Culinary Arts  325',\n  'address': '4900 OXFORD AVE 19124',\n  'foodborne_count': 2,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Frankford%20High%20School%20Culinary%20Arts%20%20325|4900%20OXFORD%20AVE%2019124'},\n {'name': 'A PLUS #40143H',\n  'address': '2201 WALNUT ST 19103',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=A%20PLUS%20%2340143H|2201%20WALNUT%20ST%2019103'},\n {'name': 'Artisan Boulanger Patissier',\n  'address': '1218 MIFFLIN ST 19148',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Artisan%20Boulanger%20Patissier|1218%20MIFFLIN%20ST%2019148'},\n {'name': 'Cinemark USA, Inc (Concessions)',\n  'address': '4012 WALNUT ST 19104',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Cinemark%20USA%2C%20Inc%20%28Concessions%29|4012%20WALNUT%20ST%2019104'},\n {'name': 'Elvis Food Market',\n  'address': '5931 W GIRARD AVE 19151',\n  'foodborne_count': 1,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Elvis%20Food%20Market|5931%20W%20GIRARD%20AVE%2019151'},\n {'name': 'Aeden Food Market',\n  'address': '3088 FRANKFORD AVE 19134',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Aeden%20Food%20Market|3088%20FRANKFORD%20AVE%2019134'},\n {'name': 'Apex Pharmacy',\n  'address': '7200 FRANKFORD AVE 19136',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Apex%20Pharmacy|7200%20FRANKFORD%20AVE%2019136'},\n {'name': 'Aramark At Temple U - Morgan Retail Food Court Street Level',\n  'address': '1601 N BROAD ST 19122',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Aramark%20At%20Temple%20U%20-%20Morgan%20Retail%20Food%20Court%20Street%20Level|1601%20N%20BROAD%20ST%2019122'},\n {'name': 'Blankenburg Head Start',\n  'address': '4600 W GIRARD AVE 19131',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Blankenburg%20Head%20Start|4600%20W%20GIRARD%20AVE%2019131'},\n {'name': 'Bridesburg Annex',\n  'address': '4415 ALMOND ST 19137',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Bridesburg%20Annex|4415%20ALMOND%20ST%2019137'},\n {'name': 'Brothers Market',\n  'address': '1103 COTTMAN AVE 19111',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Brothers%20Market|1103%20COTTMAN%20AVE%2019111'},\n {'name': 'Chucks Helados Water Ice Inc',\n  'address': '1835 SNYDER AVE 19145',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Chucks%20Helados%20Water%20Ice%20Inc|1835%20SNYDER%20AVE%2019145'},\n {'name': 'CVS Store #2170',\n  'address': '3331 GRANT AVE 19114',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=CVS%20Store%20%232170|3331%20GRANT%20AVE%2019114'},\n {'name': 'Dollar General',\n  'address': '2120 S 23RD ST 19145',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Dollar%20General|2120%20S%2023RD%20ST%2019145'},\n {'name': 'Down Home Diner',\n  'address': '45 N 12TH ST SPC B2 19107',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Down%20Home%20Diner|45%20N%2012TH%20ST%20SPC%20B2%2019107'},\n {'name': 'Dutch Eating Place',\n  'address': '45 N 12TH ST SPC B11 19107',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Dutch%20Eating%20Place|45%20N%2012TH%20ST%20SPC%20B11%2019107'},\n {'name': \"Fan's Cafe Indonesian Food\",\n  'address': '1835 SNYDER AVE 19145',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Fan%27s%20Cafe%20Indonesian%20Food|1835%20SNYDER%20AVE%2019145'},\n {'name': 'Farina Di Vita',\n  'address': '250 CATHARINE ST 19147',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Farina%20Di%20Vita|250%20CATHARINE%20ST%2019147'},\n {'name': 'Fishadelphia',\n  'address': '3401 I ST STE 200 19134',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Fishadelphia|3401%20I%20ST%20STE%20200%2019134'},\n {'name': 'Fitzwater Cafe',\n  'address': '728 S 7TH ST 19147',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Fitzwater%20Cafe|728%20S%207TH%20ST%2019147'},\n {'name': \"Franky Bradley's Lounge\",\n  'address': '1322 CHANCELLOR ST 19107',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Franky%20Bradley%27s%20Lounge|1322%20CHANCELLOR%20ST%2019107'},\n {'name': 'George Washington Carver H. S. of Engineering and Science',\n  'address': '1600 W NORRIS ST 19121',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=George%20Washington%20Carver%20H.%20S.%20of%20Engineering%20and%20Science|1600%20W%20NORRIS%20ST%2019121'},\n {'name': 'Hatville Deli',\n  'address': '45 N 12TH ST SPC A9 19107',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=Hatville%20Deli|45%20N%2012TH%20ST%20SPC%20A9%2019107'},\n {'name': 'James Rhoads School',\n  'address': '4923 PARRISH ST 19139',\n  'foodborne_count': 0,\n  'url': 'https://data.inquirer.com/inspections/philly/?detail=James%20Rhoads%20School|4923%20PARRISH%20ST%2019139'}]\n\n\n\n\nCode\n# Make a dataframe\nscraped_df = pd.DataFrame(data)\n\n\nSort by violation count:\n\n\nCode\nscraped_df.sort_values(\"foodborne_count\", ascending=False, ignore_index=True)\n\n\n\n\n\n\n\n\n\nname\naddress\nfoodborne_count\nurl\n\n\n\n\n0\nAladdin Market\n6247 ELMWOOD AVE 19142\n9\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n1\nEl Mictlan\n2053 S BEECHWOOD ST 19145\n7\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n2\nDC Donut Plus\n630 W GIRARD AVE 19123\n4\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n3\n3737 Restaurant and Loung\n3737 N 2ND ST 19140\n4\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n4\nIrwin's\n1901 S 9TH ST 19148\n3\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n5\nGaldo Catering & Entertainment\n1933 W MOYAMENSING AVE 19145\n3\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n6\nFrankford High School\n4900 OXFORD AVE 19124\n3\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n7\nE. Corner Inc.\n1360 S 51ST ST 19143\n2\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n8\nFrankford High School Culinary Arts 325\n4900 OXFORD AVE 19124\n2\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n9\nCelina Convenience Store Inc\n7930 FRANKFORD AVE 19136\n2\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n10\nBlankenburg School\n4600 W GIRARD AVE 19104\n2\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n11\nAndrew Hamilton School\n5640 SPRUCE ST 19139\n2\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n12\nElla's Pizza, Grill and Seafood\n2200 E LEHIGH AVE 19125\n2\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n13\nJavies\n4901 UMBRIA ST 19128\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n14\nElvis Food Market\n5931 W GIRARD AVE 19151\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n15\nCinemark USA, Inc (Concessions)\n4012 WALNUT ST 19104\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n16\nArtisan Boulanger Patissier\n1218 MIFFLIN ST 19148\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n17\nA PLUS #40143H\n2201 WALNUT ST 19103\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n18\nDunkin Donuts\n1551 WASHINGTON AVE 19146\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n19\nBenna's Cafe\n1236 S 8TH ST 19147\n1\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n20\nBridesburg Annex\n4415 ALMOND ST 19137\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n21\nChucks Helados Water Ice Inc\n1835 SNYDER AVE 19145\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n22\nCVS Store #2170\n3331 GRANT AVE 19114\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n23\nDollar General\n2120 S 23RD ST 19145\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n24\nFuj News\n31 E OREGON AVE 19148\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n25\nDown Home Diner\n45 N 12TH ST SPC B2 19107\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n26\nDutch Eating Place\n45 N 12TH ST SPC B11 19107\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n27\nFan's Cafe Indonesian Food\n1835 SNYDER AVE 19145\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n28\nFarina Di Vita\n250 CATHARINE ST 19147\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n29\nFishadelphia\n3401 I ST STE 200 19134\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n30\nFitzwater Cafe\n728 S 7TH ST 19147\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n31\nFranky Bradley's Lounge\n1322 CHANCELLOR ST 19107\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n32\nGeorge Washington Carver H. S. of Engineering ...\n1600 W NORRIS ST 19121\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n33\nHatville Deli\n45 N 12TH ST SPC A9 19107\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n34\nBrothers Market\n1103 COTTMAN AVE 19111\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n35\nAeden Food Market\n3088 FRANKFORD AVE 19134\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n36\nBlankenburg Head Start\n4600 W GIRARD AVE 19131\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n37\nAramark At Temple U - Morgan Retail Food Court...\n1601 N BROAD ST 19122\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n38\nApex Pharmacy\n7200 FRANKFORD AVE 19136\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n39\nJefferson Pharmacy - Walnut Street\n908 WALNUT ST 19107\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n40\nAustin Meehan Middle School\n3001 RYAN AVE 19152\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n41\nBangin Grub\n3401 I ST 19134\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n42\nCADI\n444 N 03RD ST FL 4 19123\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n43\nCommunity Partnership School\n3033 W GLENWOOD AVE 19121\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n44\nConoco\n7554 CITY AVE 19151\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n45\nDollar General\n9212 FRANKFORD AVE 19114\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n46\nFifth 4938 (Signage: 5th St. Live Poultry)\n4938 N 5TH ST 19120\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n47\nFork\n306 MARKET ST 19106\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n48\nFranchesca Mini Market\n3071 C ST 19134\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n49\nJames Rhoads School\n4923 PARRISH ST 19139\n0\nhttps://data.inquirer.com/inspections/philly/?...\n\n\n\n\n\n\n\n\n\nSee any restaurants you recognize?"
  },
  {
    "objectID": "analysis/6-lecture6A.html#thats-it",
    "href": "analysis/6-lecture6A.html#thats-it",
    "title": "Week 6AWeb Scraping",
    "section": "That’s it!",
    "text": "That’s it!\nNext time: how to scrape dynamic content!"
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "Conclusion",
    "section": "",
    "text": "The random forest model I developed obviously has much room for improvement - it had low precision in predicting the streets that would be repaved in 2023 and, as a result, predicts few streets in 2024 will be repaved. This is likely due to a few reasons.\nOne could be that the variables I chose are not strong enough to predict paving needs. Information about, for example, the age of the utilities running underneath the street, may be stronger predictor whether the street would need repaving.\nAnother reason could be that the decision making process for street repaving is not very systematic or logical. I would expect that a street with more calls about potholes would be more likely to be repaved. I’d expect that a street where truck traffic is not allowed would be less likely to be repaved. The paving program provides little insight into the process behind choosing which roads to be repaved. The program provides a “Condition Index”, a score of the condition of the street, 0 being the lowest quality condition, 100 being the highest quality. A quick review of the streets being repaved in 2023 show that a majority have a condition index of 100.\n\n\n\n2023 City of Philadelphia Street Paving Program\n\n\nWhy are these the streets being repaved? It seems like there are other priorities for repaving aside for the street condition, the safety of the street, and if the street was recently repaved.\nMaybe it is just as my former Street Department coworkers said - somebody in their office, randomly picking streets. Even if there were more variables in the model, a strong model can’t be built if the decisions aren’t systematic."
  },
  {
    "objectID": "FinalProject/Step1.html",
    "href": "FinalProject/Step1.html",
    "title": "Step 1: Download Project Data",
    "section": "",
    "text": "Most of the data features from the project are available as a GeoJSON online. The exception is the 2023 311 data, which we have to use an API to access.\n\nImport Packages\n\n\nCode\nimport geopandas as gpd\nimport numpy as np\nimport pandas as pd\nimport requests\nfrom datetime import datetime\n\n\n\n\nScrape 2023 311 Pothole Data\n\n\nCode\nr = requests.get(\n    \"https://vc0.publicstuff.com/api/2.0/requests_list\",\n    params={\"client_id\": 242, \"page\": 1, \"limit\": 2},\n)\njson = r.json()\n\nrequest_list = json[\"response\"][\"requests\"]\n\ndata = pd.DataFrame([r[\"request\"] for r in request_list])\n\n# Store the data we request\ndata = []\n\n# Total number of pages\ntotal_pages = 400\n\n# Loop over each page\nfor page_num in range(1, total_pages + 1):\n    # Print out the page number\n\n    # Make the request\n    r = requests.get(\n        \"https://vc0.publicstuff.com/api/2.0/requests_list\",\n        params={\n            \"client_id\": 242,  # Unique identifier for Philadelphia\n            \"page\": page_num,  # What page of data to pull\n            \"limit\": 700,  # How many rows per page\n        },\n    )\n\n    # Get the json\n    d = r.json()\n\n    # Add the new data to our list and filter for pothole requests\n    data += [r[\"request\"] for r in d[\"response\"][\"requests\"] if r[\"request\"][\"title\"] == \"Pothole Repair\"]\n\n# Convert the Unix timestamp to a readable date format\nfor entry in data:\n    entry['date_created'] = datetime.utcfromtimestamp(entry['date_created']).strftime('%Y-%m-%d %H:%M:%S')\n\n# Create a dataframe\ndata_df = pd.DataFrame(data)\n\n#Convert to a .csv\ndata_df.to_csv(\"2023_311.csv\", index=False)\ndata_df.drop('count_comments', axis = 1,inplace=True)data_df.drop('count_comments', axis = 1,inplace=True)\n\ndata_df.head()\n\n\n\n\n\n\n\n\n\nprimary_attachment\nid\nimage_thumbnail\ntitle\ndescription\nstatus\naddress\nlocation\nzipcode\nforeign_id\ndate_created\ncount_followers\ncount_supporters\nlat\nlon\nuser_follows\nuser_comments\nuser_request\nrank\nuser\n\n\n\n\n0\n{'id': 4692570, 'extension': 'msg', 'content_t...\n14672150\nNone\nPothole Repair\nThis is the second request for this issue\nsubmitted\n10475 Drummond Rd, Philadelphia, PA 19154, USA\n\nNone\n16419274\n2023-12-01 15:16:02\n0\n0\n40.086141\n-74.994741\n0\n0\n0\n1\n\n\n\n1\n{'id': 4692545, 'extension': 'jpg', 'content_t...\n14672086\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nNone\nsubmitted\n801–809 E Passyunk Ave,Philadelphia, PA 19147\nPhiladelphia, Pennsylvania\n19147\n16419240\n2023-12-01 15:09:05\n0\n0\n39.938665\n-75.152811\n0\n0\n0\n1\nkirkpatrick1\n\n\n2\nNaN\n14671596\n\nPothole Repair\nmassive and deep sinkhole with scrape marks an...\nsubmitted\n633 McKean St, Philadelphia, PA 19148, USA\n\nNone\n16418815\n2023-12-01 13:14:10\n0\n0\n39.924178\n-75.157464\n0\n0\n0\n1\n\n\n\n3\nNaN\n14671586\n\nPothole Repair\nlarge hole in the middle of the street.\nsubmitted\n5617 Sansom St, Philadelphia, PA 19139, USA\n\nNone\n16418807\n2023-12-01 13:11:57\n1\n1\n39.958902\n-75.233801\n0\n0\n0\n1\n\n\n\n4\n{'id': 4692370, 'extension': 'jpg', 'content_t...\n14671578\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nPothole continues to sink and get worse. Also,...\nsubmitted\n1231 S 13th St,Philadelphia, PA 19147\nPhiladelphia, Pennsylvania\n19147\n16418799\n2023-12-01 13:09:48\n0\n0\n39.934306\n-75.165147\n0\n0\n0\n1\nHoumanZiai55a1c7df4ee5b\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7785\nNaN\n13040205\n\nPothole Repair\nNone\nsubmitted\n234 S Melville St,Philadelphia, PA 19139\nPhiladelphia, Pennsylvania\n19139\n15388999\n2022-12-16 20:06:27\n0\n0\n39.953839\n-75.213336\n0\n0\n0\n1\n\n\n\n7786\nNaN\n13039942\n\nPothole Repair\nNone\nsubmitted\nW Penn St & Henry Ave,Philadelphia, PA 19129\nPhiladelphia, Pennsylvania\n19129\n15388616\n2022-12-16 19:19:39\n0\n0\n40.016399\n-75.187699\n0\n0\n0\n1\nmarksoffa\n\n\n7787\nNaN\n13039867\n\nPothole Repair\nhuge pot holes between langdon and adams multi...\nsubmitted\nLangdon St & E Roosevelt Blvd,Philadelphia, PA...\nPhiladelphia, Pennsylvania\n19124\n15388513\n2022-12-16 19:07:17\n0\n0\n40.027391\n-75.099160\n0\n0\n0\n1\nsami.smithestock\n\n\n7788\n{'id': 4052191, 'extension': 'jpeg', 'content_...\n13039559\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nundefined\nsubmitted\n15023 Barcalow Ave, Feasterville-Trevose, PA 1...\n\nNone\n15388122\n2022-12-16 18:17:42\n0\n0\n40.135118\n-75.010646\n0\n0\n0\n1\n\n\n\n7789\nNaN\n13039546\n\nPothole Repair\n\nsubmitted\n2413 Panama St, Philadelphia, PA 19103, USA\n\nNone\n15388112\n2022-12-16 18:16:42\n0\n0\n39.947961\n-75.180752\n0\n0\n0\n1\npatrick.oconnell\n\n\n\n\n7790 rows × 20 columns\n\n\n\n\n\nFilter the 311 data for 2023 only\n\n\nCode\ndata_df['date_created'] = pd.to_datetime(data_df['date_created'])\n\n# Filter rows based on the year 2023\ndata_df_2023 = data_df[data_df['date_created'].dt.year == 2023]\ndata_df_2023\n\n\n\n\n\n\n\n\n\nprimary_attachment\nid\nimage_thumbnail\ntitle\ndescription\nstatus\naddress\nlocation\nzipcode\nforeign_id\ndate_created\ncount_followers\ncount_supporters\nlat\nlon\nuser_follows\nuser_comments\nuser_request\nrank\nuser\n\n\n\n\n0\n{'id': 4692570, 'extension': 'msg', 'content_t...\n14672150\nNone\nPothole Repair\nThis is the second request for this issue\nsubmitted\n10475 Drummond Rd, Philadelphia, PA 19154, USA\n\nNone\n16419274\n2023-12-01 15:16:02\n0\n0\n40.086141\n-74.994741\n0\n0\n0\n1\n\n\n\n1\n{'id': 4692545, 'extension': 'jpg', 'content_t...\n14672086\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nNone\nsubmitted\n801–809 E Passyunk Ave,Philadelphia, PA 19147\nPhiladelphia, Pennsylvania\n19147\n16419240\n2023-12-01 15:09:05\n0\n0\n39.938665\n-75.152811\n0\n0\n0\n1\nkirkpatrick1\n\n\n2\nNaN\n14671596\n\nPothole Repair\nmassive and deep sinkhole with scrape marks an...\nsubmitted\n633 McKean St, Philadelphia, PA 19148, USA\n\nNone\n16418815\n2023-12-01 13:14:10\n0\n0\n39.924178\n-75.157464\n0\n0\n0\n1\n\n\n\n3\nNaN\n14671586\n\nPothole Repair\nlarge hole in the middle of the street.\nsubmitted\n5617 Sansom St, Philadelphia, PA 19139, USA\n\nNone\n16418807\n2023-12-01 13:11:57\n1\n1\n39.958902\n-75.233801\n0\n0\n0\n1\n\n\n\n4\n{'id': 4692370, 'extension': 'jpg', 'content_t...\n14671578\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nPothole continues to sink and get worse. Also,...\nsubmitted\n1231 S 13th St,Philadelphia, PA 19147\nPhiladelphia, Pennsylvania\n19147\n16418799\n2023-12-01 13:09:48\n0\n0\n39.934306\n-75.165147\n0\n0\n0\n1\nHoumanZiai55a1c7df4ee5b\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7497\nNaN\n13090746\n\nPothole Repair\nNO IT NEEDS TO BE FIXED\nsubmitted\n1830 W Ruscomb St, Philadelphia, PA 19141, USA\n\nNone\n15411212\n2023-01-01 16:23:24\n0\n0\n40.029932\n-75.154299\n0\n0\n0\n1\n\n\n\n7498\n{'id': 4070204, 'extension': 'jpg', 'content_t...\n13090739\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nMajor pothole across travel lane and bike lane...\nsubmitted\n505 Pine St,Philadelphia, PA 19106\nPhiladelphia, Pennsylvania\n19106\n15411208\n2023-01-01 16:16:45\n0\n0\n39.943770\n-75.150598\n0\n0\n0\n1\nmpporvaznik\n\n\n7499\nNaN\n13090516\n\nPothole Repair\n\nsubmitted\n4800 Roosevelt Blvd, Philadelphia, PA 19124, USA\n\nNone\n15411135\n2023-01-01 08:43:47\n0\n0\n40.026669\n-75.097155\n0\n0\n0\n1\ntajineaaa\n\n\n7500\n{'id': 4070100, 'extension': 'jpeg', 'content_...\n13090441\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nMy car got hit and another car total due to an...\nsubmitted\n1845 N 6th St, Philadelphia, PA 19122, USA\n\nNone\n15411125\n2023-01-01 06:05:23\n0\n0\n39.979723\n-75.144417\n0\n0\n0\n1\n\n\n\n7501\n{'id': 4070020, 'extension': 'jpg', 'content_t...\n13090178\nhttps://d17aqltn7cihbm.cloudfront.net/uploads/...\nPothole Repair\nThe cover for this pipe is missing.\nsubmitted\n717 S Christopher Columbus Blvd,Philadelphia, ...\nPhiladelphia, Pennsylvania\n19147\n15411089\n2023-01-01 00:20:30\n0\n0\n39.939686\n-75.142069\n0\n0\n0\n1\nrsuero\n\n\n\n\n7502 rows × 20 columns\n\n\n\n\n\nConvert the data to a .csv\n\n\nCode\ndata_df_2023.to_csv(\"2023_311.csv\", index=False)"
  },
  {
    "objectID": "FinalProject/Step3.html",
    "href": "FinalProject/Step3.html",
    "title": "Step 3: Create a Predictive Model",
    "section": "",
    "text": "Import Packages\n\n\nCode\nfrom matplotlib import pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport hvplot.pandas\nimport requests\nimport seaborn as sns\nimport contextily as ctx\n\n# Models\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom xgboost import XGBClassifier\n\n# Model selection\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n\n# Pipelines\nfrom sklearn.pipeline import make_pipeline\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\nnp.random.seed(42)\n\npd.options.display.max_columns = 999\n%matplotlib inline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPreprocess Data & Test for Correlation\nLoad merged data.\n\n\nCode\nstreet = gpd.read_file(\"Data/street_merge.geojson\")\nstreet.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash_2022\ncrash_2023\nTruck\n2022_Paved\n2023_Paved\n311_2022\n311_2023\nnearest_lts_score\ngeometry\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0\n0.0\n0.0\n1.0\n0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n\n\n\n\n\n\n\n\n\nCode\ncols= [\n    \"CLASS\",\n    \"Truck\",\n    \"crash_2022\",\n    \"311_2022\",\n    \"crash_2023\",\n    \"2022_Paved\",\n    \"311_2023\",\n    \"nearest_lts_score\",\n]\nsns.heatmap(street[cols].corr(), cmap='coolwarm', annot=True, vmin=-1, vmax=1);\n\n\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_21156\\1834119373.py:11: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n  sns.heatmap(street[cols].corr(), cmap='coolwarm', annot=True, vmin=-1, vmax=1);\n\n\n\n\n\nThe correlation plot shows little correlation between any of the independent variables.\nNow we can pull out the 2022 data to make our test and train set.\n\n\nCode\ncols_2022 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2022\",\n    \"Truck\",\n    \"2022_Paved\",\n    \"2023_Paved\",\n    \"311_2022\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2022 = street[cols_2022]\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2022_features = street_2022.drop(columns=cols_to_drop).copy()\n\nstreet_2022_features = street_2022_features.dropna(subset=['2022_Paved'])\nlen(street_2022_features)\n\n\n41151\n\n\n\n\nRun the models\nWe’ll try running the following models:\n(1) Random Forest Model - A collection of decision trees, each trained on a random subset of the data. The final prediction is a majority vote of the individual tree predictions.\n(2) XG Boost - A collection of decision trees, built sequentially, with each new tree correcting the errors of the previous ones.\n(3) Logistic Regression Model - Uses the logistic function to transform a linear combination of input features into a probability score. The output is then thresholded to make binary (or multiclass) predictions.\n(4) K-Nearest Neighbors - Classifies or predicts based on the majority class (for classification) in the feature space. The “nearest neighbors” are determined by a distance metric.\n\nPreprocess Data\n\n\nCode\nnumerical_features = ['crash_2022', '311_2022']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','2022_Paved']\ntarget_variable = '2023_Paved'\n\n# Creating feature and target dataframes\nX = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Creating a preprocessor for categorical features\ntransformer = ColumnTransformer(\n    transformers=[\n        (\"num\", StandardScaler(), numerical_features),\n        (\"cat\", \n         make_pipeline(SimpleImputer(strategy='constant', fill_value=0),  # Fill missing values with 0\n                       OneHotEncoder(handle_unknown=\"ignore\")),  # Apply OneHotEncoder\n         categorical_features)\n    ]\n)\n\n\n\n\nRandom Forest Model\n\n\nCode\n# Make a random forest pipeline\npipe = make_pipeline(\n    transformer, RandomForestClassifier(n_estimators=20, random_state=42)\n)\n\n# Fit on the training data\npipe.fit(X_train, y_train);\npipe.score(X_test, y_test)\n\ny_pred = pipe.predict(X_test)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nprint(f'Accuracy (Random Forest): {accuracy}')\n\n# Confusion Matrix\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# Classification Report\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred))\n\n\nAccuracy (Random Forest): 0.9411145310221934\nConfusion Matrix:\n[[11612     6]\n [  721     7]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       0.54      0.01      0.02       728\n\n    accuracy                           0.94     12346\n   macro avg       0.74      0.50      0.49     12346\nweighted avg       0.92      0.94      0.91     12346\n\n\n\nThat’s not a great model! The model is really good at predicting true negatives, but bad at predicting true positives - only 1% of true positives were predicted. The overall accuracy is high since most street segments are not being repaved. While it’s likely because the variables that are chosen aren’t great for the model, let’s try a few other models to see if anything can be improved.\n\n\nXG Boost\n\n\nCode\nX_train_transformed = transformer.fit_transform(X_train)\nX_test_transformed = transformer.transform(X_test)\n\n# Create and train the XGBoost model\nmodel = XGBClassifier()\nmodel.fit(X_train_transformed, y_train)\n\n# Make predictions and evaluate the model\ny_pred = model.predict(X_test_transformed)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nprint(f'Accuracy (XGBoost): {accuracy}')\n\n# Confusion Matrix\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# Classification Report\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred))\n\n\nAccuracy (XGBoost): 0.9411145310221934\nConfusion Matrix:\n[[11618     0]\n [  727     1]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       1.00      0.00      0.00       728\n\n    accuracy                           0.94     12346\n   macro avg       0.97      0.50      0.49     12346\nweighted avg       0.94      0.94      0.91     12346\n\n\n\nThe XG Boost model is worse than the random forest - 0% of true positives were predicted correctly.\n\n\nLogistic Regression Model\n\n\nCode\n# Create a logistic regression model using make_pipeline with preprocessing steps\nlogistic_model = make_pipeline(transformer, LogisticRegression())\n\n# Train the model\nlogistic_model.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred_logistic = logistic_model.predict(X_test)\n\n# Evaluate the model\naccuracy_logistic = accuracy_score(y_test, y_pred_logistic)\n\nprint(f'Accuracy (Logistic Regression): {accuracy_logistic}')\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred_logistic))\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred_logistic))\n\n\nAccuracy (Logistic Regression): 0.9410335331281386\nConfusion Matrix:\n[[11618     0]\n [  728     0]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       0.00      0.00      0.00       728\n\n    accuracy                           0.94     12346\n   macro avg       0.47      0.50      0.48     12346\nweighted avg       0.89      0.94      0.91     12346\n\n\n\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\sklearn\\linear_model\\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n  n_iter_i = _check_optimize_result(\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n\n\nThe logistic regression model is worse than the random forest - 0% of true positives were predicted correctly.\n\n\nK-Nearest Neighbors\n\n\nCode\n# Transform the data\nX_train_transformed = transformer.fit_transform(X_train)\nX_test_transformed = transformer.transform(X_test)\n\n# Create a KNN model\nknn_model = KNeighborsClassifier()\n\n# Train the model\nknn_model.fit(X_train_transformed, y_train)\n\n# Make predictions on the test set\ny_pred_knn = knn_model.predict(X_test_transformed)\n\n# Evaluate the model\naccuracy_knn = accuracy_score(y_test, y_pred_knn)\nprint(f'Accuracy (KNN): {accuracy_knn}')\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred_knn))\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred_knn))\n\n\nAccuracy (KNN): 0.9407095415519197\nConfusion Matrix:\n[[11614     4]\n [  728     0]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       0.00      0.00      0.00       728\n\n    accuracy                           0.94     12346\n   macro avg       0.47      0.50      0.48     12346\nweighted avg       0.89      0.94      0.91     12346\n\n\n\nKNN is worse than the original random forest. We’ll use the random forest model going forward."
  },
  {
    "objectID": "FinalProject/Step4v2.html",
    "href": "FinalProject/Step4v2.html",
    "title": "Step 4: Predict Paving",
    "section": "",
    "text": "Import Packages\n\n\nCode\nfrom matplotlib import pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport hvplot.pandas\nimport requests\nimport seaborn as sns\nimport contextily as ctx\n\n# Models\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Model selection\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n\n# Pipelines\nfrom sklearn.pipeline import make_pipeline\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\nnp.random.seed(42)\n\npd.options.display.max_columns = 999\n%matplotlib inline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoad in Data, Preprocess\n\n\nCode\nstreet = gpd.read_file(\"Data/street_merge.geojson\")\nstreet.head()\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash_2022\ncrash_2023\nTruck\n2022_Paved\n2023_Paved\n311_2022\n311_2023\nnearest_lts_score\ngeometry\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0\n0.0\n0.0\n1.0\n0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0\n0.0\n0.0\n1.0\n0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0\n0.0\n0.0\n0.0\n0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n\n\n\n\n\n\n\n\n\nCode\ncols_2022 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2022\",\n    \"Truck\",\n    \"2022_Paved\",\n    \"2023_Paved\",\n    \"311_2022\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2022 = street[cols_2022]\n\nnew_column_names = {'crash_2022': 'crash', '2022_Paved': 'paved_1','2023_Paved':'paved_2','311_2022':'311'} #Renaming so the model will work for other datasets\nstreet_2022.rename(columns=new_column_names, inplace=True)\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2022_features = street_2022.drop(columns=cols_to_drop).copy()\n\nstreet_2022_features = street_2022_features.dropna(subset=['paved_1'])\nlen(street_2022_features)\n\n\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_28984\\3610032448.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  street_2022.rename(columns=new_column_names, inplace=True)\n\n\n41151\n\n\n\n\nCreate Random Forest Model\n\n\nCode\nnumerical_features = ['crash', '311']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','paved_1']\ntarget_variable = 'paved_2'\n\n# Creating feature and target dataframes\nX = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\n# Splitting the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Creating a preprocessor for categorical features\ntransformer = ColumnTransformer(\n    transformers=[\n        (\"num\", StandardScaler(), numerical_features),\n        (\"cat\", \n         make_pipeline(SimpleImputer(strategy='constant', fill_value=0),  # Fill missing values with 0\n                       OneHotEncoder(handle_unknown=\"ignore\")),  # Apply OneHotEncoder\n         categorical_features)\n    ]\n)\n\n# Make a random forest pipeline\npipe = make_pipeline(\n    transformer, RandomForestClassifier(n_estimators=20, random_state=42)\n)\n\n# Fit on the training data\npipe.fit(X_train, y_train);\npipe.score(X_test, y_test)\n\ny_pred = pipe.predict(X_test)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nprint(f'Accuracy (Random Forest): {accuracy}')\n\n# Confusion Matrix\nprint('Confusion Matrix:')\nprint(confusion_matrix(y_test, y_pred))\n\n# Classification Report\nprint('Classification Report:')\nprint(classification_report(y_test, y_pred))\n\n\nAccuracy (Random Forest): 0.9411145310221934\nConfusion Matrix:\n[[11612     6]\n [  721     7]]\nClassification Report:\n              precision    recall  f1-score   support\n\n         0.0       0.94      1.00      0.97     11618\n         1.0       0.54      0.01      0.02       728\n\n    accuracy                           0.94     12346\n   macro avg       0.74      0.50      0.49     12346\nweighted avg       0.92      0.94      0.91     12346\n\n\n\n\n\nPredict 2023 Paving\nUse the random forest model to predict the streets repaved in 2023. Add a column for whether the prediction was correct, 1 = correct prediction, 0 = incorrect prediction.\n\n\nCode\nX_new = street_2022_features[numerical_features + categorical_features]\ny = street_2022_features[target_variable]\n\ny_pred = pipe.predict(X_new)\n\nstreet_2022['2023_Paved_Predicted'] = y_pred\nstreet_2022['predict_correct'] = (street_2022['paved_2'] == street_2022['2023_Paved_Predicted']).astype(int)\nstreet_2022.head()\n\n\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\geopandas\\geodataframe.py:1538: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash\nTruck\npaved_1\npaved_2\n311\nnearest_lts_score\ngeometry\n2023_Paved_Predicted\npredict_correct\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0.0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0.0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0.0\n0.0\n1.0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0.0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n1\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0.0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n1\n\n\n\n\n\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['red', '#d8d8d8'])\nstreet_2022.explore(\n    column=\"predict_correct\",\n    cmap=custom_cmap_1,\n    categorical=True,\n    legend=True,\n    tiles=\"CartoDB positron\"\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\nPredict 2024 Paving\n\n\nCode\ncols_2023 = [\n    \"R_HUNDRED\",\n    \"CLASS\",\n    \"STNAME\",\n    \"ST_CODE\",\n    \"SEG_ID\",\n    \"Shape__Length\",\n    \"crash_2023\",\n    \"Truck\",\n    \"2023_Paved\",\n    \"311_2023\",\n    \"nearest_lts_score\",\n    \"geometry\",\n]\n\nstreet_2023 = street[cols_2023]\n\nnew_column_names = {'crash_2023': 'crash', '2023_Paved': 'paved_1','311_2023':'311'} #Renaming so the variables are the same as the 2022 data that trained the model\nstreet_2023.rename(columns=new_column_names, inplace=True)\n\ncols_to_drop = [\"R_HUNDRED\", \"STNAME\",\"ST_CODE\", \"SEG_ID\", \"Shape__Length\", \"geometry\"]\nstreet_2023_features = street_2023.drop(columns=cols_to_drop).copy()\n\nstreet_2023_features = street_2023_features.dropna(subset=['paved_1'])\n\n\nC:\\Users\\epark\\AppData\\Local\\Temp\\ipykernel_28984\\2805427981.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  street_2023.rename(columns=new_column_names, inplace=True)\n\n\n\n\nCode\nnumerical_features = ['crash', '311']\ncategorical_features = ['CLASS', 'Truck', 'nearest_lts_score','paved_1']\nX_new = street_2023_features[numerical_features + categorical_features]\ny_pred = pipe.predict(X_new)\n\nstreet_2023['2024_Paved_Predicted'] = y_pred\nstreet_2023.head()\n\n\nC:\\Users\\epark\\mambaforge\\envs\\musa-550-fall-2023\\lib\\site-packages\\geopandas\\geodataframe.py:1538: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  super().__setitem__(key, value)\n\n\n\n\n\n\n\n\n\nR_HUNDRED\nCLASS\nSTNAME\nST_CODE\nSEG_ID\nShape__Length\ncrash\nTruck\npaved_1\n311\nnearest_lts_score\ngeometry\n2024_Paved_Predicted\n\n\n\n\n0\n9200\n2\nBARTRAM AVE\n16120\n100002\n1137.344551\n0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25362 39.88134, -75.25383 39.8...\n0.0\n\n\n1\n9100\n2\nBARTRAM AVE\n16120\n100003\n371.888030\n0\n0.0\n1.0\n0\n3\nLINESTRING (-75.25149 39.88373, -75.25337 39.8...\n0.0\n\n\n2\n0\n2\nBARTRAM AVE\n16120\n100004\n48.720227\n0\n0.0\n1.0\n0\n4\nLINESTRING (-75.25337 39.88161, -75.25362 39.8...\n0.0\n\n\n3\n8500\n5\nEASTWICK PL\n30570\n100006\n292.693856\n0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24576 39.89227, -75.24724 39.8...\n0.0\n\n\n4\n8500\n5\nHARLEY PL\n40570\n100007\n292.440377\n0\n0.0\n0.0\n0\n1\nLINESTRING (-75.24648 39.89267, -75.24798 39.8...\n0.0\n\n\n\n\n\n\n\n\n\nCode\ncustom_cmap_1 = ListedColormap(['#d8d8d8', 'red'])\nstreet_2023.explore(\n    column=\"2024_Paved_Predicted\",\n    cmap=custom_cmap_1,\n    categorical=True,\n    legend=True,\n    tiles=\"CartoDB positron\"\n)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MUSA 550 - Final Project",
    "section": "",
    "text": "Each year, the Philadelphia Streets Department releases their annual Street Paving Program and List, detailing the paving process and lists streets that the department will pave that year.\nWhen I interned for the Street Department, my coworkers joked that the way the list was decided was one person randomly choosing whichever streets they thought needed it. I wanted to see whether or not that was actually the truth and if I can use existing data about to test it.\n\n\n\nI chose to use data about the street’s physical and safety conditions to create the model. These data features include:\n1. 311 Calls about Potholes (2022) (2023)\nMore calls about potholes likely means that the street needs to be repaved more than others. However, it should be noted that 311 calls are a biased data source. 311 callers tend to be whiter and richer.\n2. Whether Street is a Non-Thru Street for Trucks\nWithout information on traffic levels for each street, we can use whether the street is open to trucks as a substitute.\n3. Street Classification\nWithout information on traffic levels for each street, we can use street capacity as a substitute.\n4. Number of Fatal Crashes\nOTIS often aligns their restriping/safety plans with streets that are about to be repaved. A higher share of crashes would indicate a bigger need for safety interventions.\n5. Level of Bike Stress\nThe LTS classification scheme is DVRPC’s estimation of comfort of bicyclists in traffic depending on number of lanes, effective vehicle speed, and presence/type of bicycle facility. Much like the crashes, a higher stress level should indicate a bigger need for bike safety interventions.\n6. Whether Street Was Repaved in Previous Year (2022)(2023)\nA street that was repaved in the previous year would likely not need to be repaved in this round of repaving."
  },
  {
    "objectID": "index.html#predicting-philadelphias-2024-street-paving-plan",
    "href": "index.html#predicting-philadelphias-2024-street-paving-plan",
    "title": "MUSA 550 - Final Project",
    "section": "",
    "text": "Each year, the Philadelphia Streets Department releases their annual Street Paving Program and List, detailing the paving process and lists streets that the department will pave that year.\nWhen I interned for the Street Department, my coworkers joked that the way the list was decided was one person randomly choosing whichever streets they thought needed it. I wanted to see whether or not that was actually the truth and if I can use existing data about to test it.\n\n\n\nI chose to use data about the street’s physical and safety conditions to create the model. These data features include:\n1. 311 Calls about Potholes (2022) (2023)\nMore calls about potholes likely means that the street needs to be repaved more than others. However, it should be noted that 311 calls are a biased data source. 311 callers tend to be whiter and richer.\n2. Whether Street is a Non-Thru Street for Trucks\nWithout information on traffic levels for each street, we can use whether the street is open to trucks as a substitute.\n3. Street Classification\nWithout information on traffic levels for each street, we can use street capacity as a substitute.\n4. Number of Fatal Crashes\nOTIS often aligns their restriping/safety plans with streets that are about to be repaved. A higher share of crashes would indicate a bigger need for safety interventions.\n5. Level of Bike Stress\nThe LTS classification scheme is DVRPC’s estimation of comfort of bicyclists in traffic depending on number of lanes, effective vehicle speed, and presence/type of bicycle facility. Much like the crashes, a higher stress level should indicate a bigger need for bike safety interventions.\n6. Whether Street Was Repaved in Previous Year (2022)(2023)\nA street that was repaved in the previous year would likely not need to be repaved in this round of repaving."
  }
]